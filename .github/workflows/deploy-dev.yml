name: Deploy Backend to VPS (Dev)

on:
  push:
    branches: [ dev ]

env:
  DOCKER_IMAGE: ${{ secrets.DOCKERHUB_USERNAME }}/maicare
  VPS_APP_DIR: /opt/maicare

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment: maicare-prod

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ${{ env.DOCKER_IMAGE }}:dev-back
            ${{ env.DOCKER_IMAGE }}:dev-back-${{ github.sha }}

      - name: Deploy to VPS
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USERNAME }}
          key: ${{ secrets.VPS_SSH_KEY }}
          script: |
            #!/bin/bash
            set -e

            echo "=== Starting Dev Deployment ==="

            # Create app directory if it doesn't exist
            sudo mkdir -p /opt/maicare
            sudo chown -R ${{ secrets.VPS_USERNAME }}:${{ secrets.VPS_USERNAME }} /opt/maicare

            # Login to Docker Hub
            echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin

            # Stop and remove existing dev container if running
            if [ "$(docker ps -aq -f name=maicare-backend-dev)" ]; then
              echo "Stopping and removing existing dev container..."
              docker stop maicare-backend-dev
              docker rm maicare-backend-dev
            fi

            # Pull the new dev image
            echo "Pulling new dev image..."
            docker pull ${{ env.DOCKER_IMAGE }}:dev-back

            # Run the new dev container
            echo "Starting new dev container..."
            docker run -d \
              --name maicare-backend-dev \
              --network maicare-dev \
              -p 9080:8080 \
              --restart unless-stopped \
              --env-file /opt/maicare/app.dev.env \
              ${{ env.DOCKER_IMAGE }}:dev-back

            echo "=== Dev Deployment Complete ==="

            # Check if the dev container is running
            echo "Checking if the dev container is running..."
            sleep 10
            if [ "$(docker ps -q -f name=maicare-backend-dev)" ]; then
              echo "Dev container is running successfully."
            else
              echo "Dev container failed to start."
              exit 1
            fi

            # Health check on dev port
            echo "Performing dev health check..."
            for i in {1..2}; do
              if curl -s http://localhost:9080/test/health | grep -q "healthy"; then
                echo "Dev health check passed."
                break
              else
                echo "Dev health check failed."
                sleep 5
              fi
            done
            if [ $i -eq 2 ]; then
              exit 1
            fi

            # Clean up unused images
            echo "Cleaning up..."
            docker image prune -af