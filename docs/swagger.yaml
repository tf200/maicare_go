basePath: /
definitions:
  api.AddClientDocumentApiRequest:
    properties:
      attachmentID:
        type: string
      label:
        type: string
    type: object
  api.AddClientDocumentApiResponse:
    properties:
      attachment_id:
        type: string
      client_id:
        type: integer
      created:
        type: string
      file:
        type: string
      id:
        type: integer
      is_used:
        type: boolean
      label:
        type: string
      name:
        type: string
      size:
        type: integer
      tag:
        type: string
      updated:
        type: string
    type: object
  api.AddEducationToEmployeeProfileRequest:
    properties:
      degree:
        type: string
      end_date:
        type: string
      field_of_study:
        type: string
      institution_name:
        type: string
      start_date:
        type: string
    required:
    - degree
    - end_date
    - field_of_study
    - institution_name
    - start_date
    type: object
  api.AddEducationToEmployeeProfileResponse:
    properties:
      degree:
        type: string
      employee_id:
        type: integer
      end_date:
        type: string
      field_of_study:
        type: string
      id:
        type: integer
      institution_name:
        type: string
      start_date:
        type: string
    type: object
  api.AddEmployeeCertificationRequest:
    properties:
      date_issued:
        type: string
      issued_by:
        type: string
      name:
        type: string
    type: object
  api.AddEmployeeCertificationResponse:
    properties:
      created_at:
        type: string
      date_issued:
        type: string
      employee_id:
        type: integer
      id:
        type: integer
      issued_by:
        type: string
      name:
        type: string
    type: object
  api.AddEmployeeExperienceRequest:
    properties:
      company_name:
        type: string
      description:
        type: string
      end_date:
        type: string
      job_title:
        type: string
      start_date:
        type: string
    required:
    - company_name
    - end_date
    - job_title
    - start_date
    type: object
  api.AddEmployeeExperienceResponse:
    properties:
      company_name:
        type: string
      created_at:
        type: string
      description:
        type: string
      employee_id:
        type: integer
      end_date:
        type: string
      id:
        type: integer
      job_title:
        type: string
      start_date:
        type: string
    type: object
  api.Address:
    properties:
      address:
        type: string
      belongs_to:
        type: string
      city:
        type: string
      phone_number:
        type: string
      zip_code:
        type: string
    type: object
  api.AssignEmployeeRequest:
    properties:
      employee_id:
        type: integer
      role:
        type: string
      start_date:
        type: string
    type: object
  api.AssignEmployeeResponse:
    properties:
      client_id:
        type: integer
      created_at:
        type: string
      employee_id:
        type: integer
      id:
        type: integer
      role:
        type: string
      start_date:
        type: string
    type: object
  api.AssignRoleToUserApiResponse:
    properties:
      id:
        type: integer
      role_id:
        type: integer
    type: object
  api.AssignRoleToUserParams:
    properties:
      id:
        type: integer
      role_id:
        type: integer
    type: object
  api.ConfirmIncidentResponse:
    properties:
      file_url:
        type: string
      id:
        type: integer
    type: object
  api.Contact:
    properties:
      email:
        type: string
      name:
        type: string
      phone_number:
        type: string
    type: object
  api.CorrectSpellingRequest:
    properties:
      initial_text:
        type: string
    type: object
  api.CorrectSpellingResponse:
    properties:
      corrected_text:
        type: string
      initial_text:
        type: string
    type: object
  api.CreateAppointmentCardRequest:
    properties:
      general_information:
        items:
          type: string
        type: array
      household_info:
        items:
          type: string
        type: array
      important_contacts:
        items:
          type: string
        type: array
      leave:
        items:
          type: string
        type: array
      organization_agreements:
        items:
          type: string
        type: array
      school_internship:
        items:
          type: string
        type: array
      smoking_rules:
        items:
          type: string
        type: array
      travel:
        items:
          type: string
        type: array
      treatment_agreements:
        items:
          type: string
        type: array
      work:
        items:
          type: string
        type: array
      youth_officer_agreements:
        items:
          type: string
        type: array
    type: object
  api.CreateAppointmentCardResponse:
    properties:
      client_id:
        type: integer
      created_at:
        type: string
      general_information:
        items:
          type: string
        type: array
      household_info:
        items:
          type: string
        type: array
      id:
        type: integer
      important_contacts:
        items:
          type: string
        type: array
      leave:
        items:
          type: string
        type: array
      organization_agreements:
        items:
          type: string
        type: array
      school_internship:
        items:
          type: string
        type: array
      smoking_rules:
        items:
          type: string
        type: array
      travel:
        items:
          type: string
        type: array
      treatment_agreements:
        items:
          type: string
        type: array
      updated_at:
        type: string
      work:
        items:
          type: string
        type: array
      youth_officer_agreements:
        items:
          type: string
        type: array
    type: object
  api.CreateClientAllergyRequest:
    properties:
      allergy_id:
        type: string
      notes:
        type: string
      reaction:
        type: string
      severity:
        type: string
    required:
    - allergy_id
    - reaction
    - severity
    type: object
  api.CreateClientAllergyResponse:
    properties:
      allergy_type_id:
        type: string
      client_id:
        type: integer
      created_at:
        type: string
      id:
        type: integer
      notes:
        type: string
      reaction:
        type: string
      severity:
        type: string
    type: object
  api.CreateClientDetailsRequest:
    properties:
      addresses:
        items:
          $ref: '#/definitions/api.Address'
        type: array
      birthplace:
        type: string
      bsn:
        type: string
      date_of_birth:
        type: string
      departement:
        type: string
      email:
        type: string
      filenumber:
        type: string
      first_name:
        type: string
      gender:
        type: string
      identity_attachment_ids:
        items:
          type: string
        type: array
      infix:
        type: string
      last_name:
        type: string
      legal_measure:
        type: string
      location_id:
        type: integer
      organisation:
        type: string
      phone_number:
        type: string
      sender_id:
        type: integer
      source:
        type: string
    required:
    - birthplace
    - date_of_birth
    - departement
    - email
    - filenumber
    - first_name
    - gender
    - last_name
    - location_id
    - organisation
    - phone_number
    - sender_id
    - source
    type: object
  api.CreateClientDetailsResponse:
    properties:
      addresses:
        items:
          $ref: '#/definitions/api.Address'
        type: array
      birthplace:
        type: string
      bsn:
        type: string
      created:
        type: string
      date_of_birth:
        type: string
      departement:
        type: string
      departure_reason:
        type: string
      departure_report:
        type: string
      email:
        type: string
      filenumber:
        type: string
      first_name:
        type: string
      gender:
        type: string
      has_untaken_medications:
        type: boolean
      id:
        type: integer
      identity:
        type: boolean
      identity_attachment_ids:
        items:
          type: string
        type: array
      infix:
        type: string
      last_name:
        type: string
      legal_measure:
        type: string
      location_id:
        type: integer
      organisation:
        type: string
      phone_number:
        type: string
      profile_picture:
        type: string
      sender_id:
        type: integer
      source:
        type: string
      status:
        type: string
    type: object
  api.CreateClientDiagnosisRequest:
    properties:
      description:
        type: string
      diagnosing_clinician:
        type: string
      diagnosis_code:
        type: string
      notes:
        type: string
      severity:
        type: string
      status:
        type: string
      title:
        type: string
    type: object
  api.CreateClientDiagnosisResponse:
    properties:
      client_id:
        type: integer
      created_at:
        type: string
      description:
        type: string
      diagnosing_clinician:
        type: string
      diagnosis_code:
        type: string
      id:
        type: integer
      notes:
        type: string
      severity:
        type: string
      status:
        type: string
      title:
        type: string
    type: object
  api.CreateClientEmergencyContactParams:
    properties:
      address:
        type: string
      email:
        type: string
      first_name:
        type: string
      goals_reports:
        type: boolean
      incidents_reports:
        type: boolean
      last_name:
        type: string
      medical_reports:
        type: boolean
      phone_number:
        type: string
      relation_status:
        type: string
      relationship:
        type: string
    type: object
  api.CreateClientEmergencyContactResponse:
    properties:
      address:
        type: string
      client_id:
        type: integer
      created_at:
        type: string
      email:
        type: string
      first_name:
        type: string
      goals_reports:
        type: boolean
      id:
        type: integer
      incidents_reports:
        type: boolean
      is_verified:
        type: boolean
      last_name:
        type: string
      medical_reports:
        type: boolean
      phone_number:
        type: string
      relation_status:
        type: string
      relationship:
        type: string
    type: object
  api.CreateClientMaturityMatrixAssessmentRequest:
    properties:
      assessment:
        items:
          $ref: '#/definitions/api.MatrixAssessment'
        type: array
    required:
    - assessment
    type: object
  api.CreateClientMaturityMatrixAssessmentResponse:
    properties:
      assessment:
        items:
          $ref: '#/definitions/api.MatrixAssessment'
        type: array
      client_id:
        type: integer
    type: object
  api.CreateClientMedicationResponse:
    properties:
      administered_by_id:
        type: integer
      client_id:
        type: integer
      created_at:
        type: string
      dosage:
        type: string
      end_date:
        type: string
      id:
        type: integer
      is_critical:
        type: boolean
      name:
        type: string
      notes:
        type: string
      self_administered:
        type: boolean
      start_date:
        type: string
      updated_at:
        type: string
    type: object
  api.CreateEmployeeProfileRequest:
    properties:
      authentication_phone_number:
        example: "1234567890"
        type: string
      date_of_birth:
        example: "2000-01-01"
        type: string
      department:
        example: IT
        type: string
      email:
        example: emai@exe.com
        type: string
      employee_number:
        example: "123456"
        type: string
      employment_number:
        example: "123456"
        type: string
      first_name:
        example: fara
        type: string
      gender:
        type: string
      home_telephone_number:
        example: "1234567890"
        type: string
      is_subcontractor:
        example: false
        type: boolean
      last_name:
        example: joe
        type: string
      location_id:
        example: 1
        type: integer
      out_of_service:
        example: false
        type: boolean
      position:
        example: developer
        type: string
      private_email_address:
        example: joe@ex.com
        type: string
      private_phone_number:
        example: "1234567890"
        type: string
      role_id:
        example: 1
        type: integer
      work_phone_number:
        example: "1234567890"
        type: string
    required:
    - email
    - first_name
    - last_name
    - role_id
    type: object
  api.CreateEmployeeProfileResponse:
    properties:
      authentication_phone_number:
        type: string
      created_at:
        type: string
      date_of_birth:
        type: string
      department:
        type: string
      email:
        type: string
      employee_number:
        type: string
      employment_number:
        type: string
      first_name:
        type: string
      gender:
        type: string
      has_borrowed:
        type: boolean
      home_telephone_number:
        type: string
      id:
        type: integer
      is_archived:
        type: boolean
      is_subcontractor:
        type: boolean
      last_name:
        type: string
      location_id:
        type: integer
      out_of_service:
        type: boolean
      position:
        type: string
      private_email_address:
        type: string
      private_phone_number:
        type: string
      user_id:
        type: integer
      work_phone_number:
        type: string
    type: object
  api.CreateIncidentRequest:
    properties:
      accident:
        type: boolean
      additional_appointments:
        type: string
      cause_explanation:
        type: string
      client_absence:
        type: boolean
      client_id:
        type: integer
      client_options:
        items:
          type: string
        type: array
      emails:
        items:
          type: string
        type: array
      employee_absenteeism:
        type: string
      employee_id:
        type: integer
      fire_water_damage:
        type: boolean
      incident_date:
        type: string
      incident_explanation:
        type: string
      incident_prevent_steps:
        type: string
      incident_taken_measures:
        type: string
      incident_type:
        type: string
      inform_who:
        items:
          type: string
        type: array
      location_id:
        type: integer
      medicines:
        type: boolean
      mese_worker:
        items:
          type: string
        type: array
      needed_consultation:
        enum:
        - "no"
        - not_clear
        - hospitalization
        - consult_gp
        type: string
      organization:
        type: boolean
      organizational:
        items:
          type: string
        type: array
      other:
        type: boolean
      other_cause:
        type: string
      other_desc:
        type: string
      other_notifications:
        type: boolean
      passing_away:
        type: boolean
      physical_injury:
        enum:
        - no_injuries
        - not_noticeable_yet
        - bruising_swelling
        - broken_bones
        - shortness_of_breath
        - death
        - other
        type: string
      physical_injury_desc:
        type: string
      psychological_damage:
        type: string
      psychological_damage_desc:
        type: string
      recurrence_risk:
        enum:
        - high
        - very_high
        - means
        - very_low
        type: string
      reporter_involvement:
        enum:
        - directly_involved
        - witness
        - found_afterwards
        - alarmed
        type: string
      runtime_incident:
        type: string
      self_harm:
        type: boolean
      severity_of_incident:
        enum:
        - fatal
        - serious
        - less_serious
        - near_incident
        type: string
      succession:
        items:
          type: string
        type: array
      succession_desc:
        type: string
      technical:
        items:
          type: string
        type: array
      use_prohibited_substances:
        type: boolean
      violence:
        type: boolean
    required:
    - incident_type
    - needed_consultation
    - physical_injury
    - recurrence_risk
    - reporter_involvement
    - runtime_incident
    - severity_of_incident
    type: object
  api.CreateIncidentResponse:
    properties:
      accident:
        type: boolean
      additional_appointments:
        type: string
      cause_explanation:
        type: string
      client_absence:
        type: boolean
      client_id:
        type: integer
      client_options:
        items:
          type: string
        type: array
      created:
        type: string
      emails:
        items:
          type: string
        type: array
      employee_absenteeism:
        type: string
      employee_id:
        type: integer
      fire_water_damage:
        type: boolean
      id:
        type: integer
      incident_date:
        type: string
      incident_explanation:
        type: string
      incident_prevent_steps:
        type: string
      incident_taken_measures:
        type: string
      incident_type:
        type: string
      inform_who:
        items:
          type: string
        type: array
      location_id:
        type: integer
      medicines:
        type: boolean
      mese_worker:
        items:
          type: string
        type: array
      needed_consultation:
        type: string
      organization:
        type: boolean
      organizational:
        items:
          type: string
        type: array
      other:
        type: boolean
      other_cause:
        type: string
      other_desc:
        type: string
      other_notifications:
        type: boolean
      passing_away:
        type: boolean
      physical_injury:
        type: string
      physical_injury_desc:
        type: string
      psychological_damage:
        type: string
      psychological_damage_desc:
        type: string
      recurrence_risk:
        type: string
      reporter_involvement:
        type: string
      runtime_incident:
        type: string
      self_harm:
        type: boolean
      severity_of_incident:
        type: string
      soft_delete:
        type: boolean
      succession:
        items:
          type: string
        type: array
      succession_desc:
        type: string
      technical:
        items:
          type: string
        type: array
      updated:
        type: string
      use_prohibited_substances:
        type: boolean
      violence:
        type: boolean
    type: object
  api.CreateLocationRequest:
    properties:
      address:
        type: string
      capacity:
        type: integer
      name:
        type: string
    required:
    - address
    - name
    type: object
  api.CreateLocationResponse:
    properties:
      address:
        type: string
      capacity:
        type: integer
      id:
        type: integer
      name:
        type: string
    type: object
  api.CreateProgressReportRequest:
    properties:
      date:
        type: string
      emotional_state:
        enum:
        - normal
        - excited
        - happy
        - sad
        - angry
        - anxious
        - depressed
        type: string
      employee_id:
        type: integer
      report_text:
        type: string
      title:
        type: string
      type:
        enum:
        - morning_report
        - evening_report
        - night_report
        - shift_report
        - one_to_one_report
        - process_report
        - contact_journal
        - other
        type: string
    required:
    - emotional_state
    - report_text
    - type
    type: object
  api.CreateProgressReportResponse:
    properties:
      client_id:
        type: integer
      created_at:
        type: string
      date:
        type: string
      emotional_state:
        type: string
      employee_id:
        type: integer
      id:
        type: integer
      report_text:
        type: string
      title:
        type: string
      type:
        type: string
    type: object
  api.CreateSenderRequest:
    properties:
      BTWnumber:
        type: string
      KVKnumber:
        type: string
      address:
        type: string
      client_number:
        type: string
      contacts:
        items:
          $ref: '#/definitions/api.Contact'
        type: array
      land:
        type: string
      name:
        type: string
      phone_number:
        type: string
      place:
        type: string
      postal_code:
        type: string
      types:
        enum:
        - main_provider
        - local_authority
        - particular_party
        - healthcare_institution
        type: string
    required:
    - name
    - types
    type: object
  api.CreateSenderResponse:
    properties:
      BTWnumber:
        type: string
      KVKnumber:
        type: string
      address:
        type: string
      client_number:
        type: string
      contacts:
        items:
          $ref: '#/definitions/api.Contact'
        type: array
      created_at:
        type: string
      id:
        type: integer
      land:
        type: string
      name:
        type: string
      phone_number:
        type: string
      place:
        type: string
      postal_code:
        type: string
      types:
        type: string
      updated_at:
        type: string
    type: object
  api.CreateclientMedicationRequest:
    properties:
      administered_by_id:
        type: integer
      dosage:
        type: string
      end_date:
        $ref: '#/definitions/pgtype.Date'
      is_critical:
        type: boolean
      name:
        type: string
      notes:
        type: string
      self_administered:
        type: boolean
      start_date:
        $ref: '#/definitions/pgtype.Date'
    type: object
  api.DeleteAssignedEmployeeResponse:
    properties:
      id:
        type: integer
    type: object
  api.DeleteAttachmentResponse:
    properties:
      created_at:
        type: string
      file_id:
        type: string
      file_url:
        type: string
      size:
        type: integer
    type: object
  api.DeleteClientDocumentApiRequest:
    properties:
      attachement_id:
        type: string
    required:
    - attachement_id
    type: object
  api.DeleteClientDocumentApiResponse:
    properties:
      attachment_id:
        type: string
      id:
        type: integer
    type: object
  api.DeleteClientEmergencyContactResponse:
    properties:
      id:
        type: integer
    type: object
  api.DeleteEmployeeCertificationResponse:
    properties:
      created_at:
        type: string
      date_issued:
        type: string
      employee_id:
        type: integer
      id:
        type: integer
      issued_by:
        type: string
      name:
        type: string
    type: object
  api.DeleteEmployeeEducationResponse:
    properties:
      degree:
        type: string
      end_date:
        type: string
      field_of_study:
        type: string
      id:
        type: integer
      institution_name:
        type: string
      start_date:
        type: string
    type: object
  api.DeleteEmployeeExperienceResponse:
    properties:
      company_name:
        type: string
      created_at:
        type: string
      description:
        type: string
      employee_id:
        type: integer
      end_date:
        type: string
      id:
        type: integer
      job_title:
        type: string
      start_date:
        type: string
    type: object
  api.DeleteLocationResponse:
    properties:
      id:
        type: integer
    type: object
  api.GenerateAutoReportsRequest:
    properties:
      end_date:
        type: string
      start_date:
        type: string
    type: object
  api.GenerateAutoReportsResponse:
    properties:
      report:
        type: string
    type: object
  api.GenerateIncidentFileResponse:
    properties:
      file_url:
        type: string
      incident_id:
        type: integer
    type: object
  api.GetAppointmentCardResponse:
    properties:
      client_id:
        type: integer
      created_at:
        type: string
      general_information:
        items:
          type: string
        type: array
      household_info:
        items:
          type: string
        type: array
      id:
        type: integer
      important_contacts:
        items:
          type: string
        type: array
      leave:
        items:
          type: string
        type: array
      organization_agreements:
        items:
          type: string
        type: array
      school_internship:
        items:
          type: string
        type: array
      smoking_rules:
        items:
          type: string
        type: array
      travel:
        items:
          type: string
        type: array
      treatment_agreements:
        items:
          type: string
        type: array
      updated_at:
        type: string
      work:
        items:
          type: string
        type: array
      youth_officer_agreements:
        items:
          type: string
        type: array
    type: object
  api.GetAssignedEmployeeResponse:
    properties:
      client_id:
        type: integer
      created_at:
        type: string
      employee_id:
        type: integer
      employee_name:
        type: string
      id:
        type: integer
      role:
        type: string
      start_date:
        type: string
    type: object
  api.GetAttachmentByIdResponse:
    properties:
      created_at:
        type: string
      file_id:
        type: string
      file_url:
        type: string
      size:
        type: integer
    type: object
  api.GetClientAllergyResponse:
    properties:
      allergy_type_id:
        type: string
      client_id:
        type: integer
      created_at:
        type: string
      id:
        type: integer
      notes:
        type: string
      reaction:
        type: string
      severity:
        type: string
    type: object
  api.GetClientApiResponse:
    properties:
      addresses:
        items:
          $ref: '#/definitions/api.Address'
        type: array
      birthplace:
        type: string
      bsn:
        type: string
      created_at:
        type: string
      date_of_birth:
        type: string
      departement:
        type: string
      departure_reason:
        type: string
      departure_report:
        type: string
      email:
        type: string
      filenumber:
        type: string
      first_name:
        type: string
      gender:
        type: string
      has_untaken_medications:
        type: boolean
      id:
        type: integer
      identity:
        type: boolean
      identity_attachment_ids:
        items:
          type: string
        type: array
      infix:
        type: string
      last_name:
        type: string
      legal_measure:
        type: string
      location_id:
        type: integer
      organisation:
        type: string
      phone_number:
        type: string
      profile_picture:
        type: string
      sender_id:
        type: integer
      source:
        type: string
      status:
        type: string
    type: object
  api.GetClientDiagnosisResponse:
    properties:
      client_id:
        type: integer
      created_at:
        type: string
      date_of_diagnosis:
        type: string
      description:
        type: string
      diagnosing_clinician:
        type: string
      diagnosis_code:
        type: string
      id:
        type: integer
      notes:
        type: string
      severity:
        type: string
      status:
        type: string
      title:
        type: string
    type: object
  api.GetClientEmergencyContactResponse:
    properties:
      address:
        type: string
      client_id:
        type: integer
      created_at:
        type: string
      email:
        type: string
      first_name:
        type: string
      goals_reports:
        type: boolean
      id:
        type: integer
      incidents_reports:
        type: boolean
      is_verified:
        type: boolean
      last_name:
        type: string
      medical_reports:
        type: boolean
      phone_number:
        type: string
      relation_status:
        type: string
      relationship:
        type: string
    type: object
  api.GetClientMedicationResponse:
    properties:
      administered_by_first_name:
        type: string
      administered_by_id:
        type: integer
      administered_by_last_name:
        type: string
      client_id:
        type: integer
      created_at:
        type: string
      dosage:
        type: string
      end_date:
        type: string
      id:
        type: integer
      is_critical:
        type: boolean
      name:
        type: string
      notes:
        type: string
      self_administered:
        type: boolean
      start_date:
        type: string
      updated_at:
        type: string
    type: object
  api.GetClientRelatedEmailsResponse:
    properties:
      emails:
        items:
          type: string
        type: array
    type: object
  api.GetEmployeeProfileByIDApiResponse:
    properties:
      authentication_phone_number:
        type: string
      created_at:
        type: string
      date_of_birth:
        type: string
      department:
        type: string
      email:
        type: string
      employee_number:
        type: string
      employment_number:
        type: string
      first_name:
        type: string
      gender:
        type: string
      has_borrowed:
        type: boolean
      home_telephone_number:
        type: string
      id:
        type: integer
      is_archived:
        type: boolean
      is_subcontractor:
        type: boolean
      last_name:
        type: string
      location_id:
        type: integer
      out_of_service:
        type: boolean
      position:
        type: string
      private_email_address:
        type: string
      private_phone_number:
        type: string
      profile_picture:
        type: string
      role_id:
        type: integer
      user_id:
        type: integer
      work_phone_number:
        type: string
    type: object
  api.GetEmployeeProfileResponse:
    properties:
      email:
        type: string
      employee_id:
        type: integer
      first_name:
        type: string
      last_name:
        type: string
      permissions:
        items:
          $ref: '#/definitions/api.Permission'
        type: array
      role_id:
        type: integer
      user_id:
        type: integer
    type: object
  api.GetIncidentResponse:
    properties:
      accident:
        type: boolean
      additional_appointments:
        type: string
      cause_explanation:
        type: string
      client_absence:
        type: boolean
      client_id:
        type: integer
      client_options:
        items:
          type: string
        type: array
      created_at:
        type: string
      emails:
        items:
          type: string
        type: array
      employee_absenteeism:
        type: string
      employee_first_name:
        type: string
      employee_id:
        type: integer
      employee_last_name:
        type: string
      fire_water_damage:
        type: boolean
      id:
        type: integer
      incident_date:
        type: string
      incident_explanation:
        type: string
      incident_prevent_steps:
        type: string
      incident_taken_measures:
        type: string
      incident_type:
        type: string
      inform_who:
        items:
          type: string
        type: array
      is_confirmed:
        type: boolean
      location_id:
        type: integer
      location_name:
        type: string
      medicines:
        type: boolean
      mese_worker:
        items:
          type: string
        type: array
      needed_consultation:
        type: string
      organization:
        type: boolean
      organizational:
        items:
          type: string
        type: array
      other:
        type: boolean
      other_cause:
        type: string
      other_desc:
        type: string
      other_notifications:
        type: boolean
      passing_away:
        type: boolean
      physical_injury:
        type: string
      physical_injury_desc:
        type: string
      psychological_damage:
        type: string
      psychological_damage_desc:
        type: string
      recurrence_risk:
        type: string
      reporter_involvement:
        type: string
      runtime_incident:
        type: string
      self_harm:
        type: boolean
      severity_of_incident:
        type: string
      soft_delete:
        type: boolean
      succession:
        items:
          type: string
        type: array
      succession_desc:
        type: string
      technical:
        items:
          type: string
        type: array
      updated_at:
        type: string
      use_prohibited_substances:
        type: boolean
      violence:
        type: boolean
    type: object
  api.GetLocationResponse:
    properties:
      address:
        type: string
      capacity:
        type: integer
      id:
        type: integer
      name:
        type: string
    type: object
  api.GetMissingClientDocumentsApiResponse:
    properties:
      missing_docs:
        items:
          type: string
        type: array
    type: object
  api.GetPermissionsByRoleIDApiResponse:
    properties:
      id:
        type: integer
      method:
        type: string
      name:
        type: string
      resource:
        type: string
    type: object
  api.GetProgressReportResponse:
    properties:
      client_id:
        type: integer
      created_at:
        type: string
      date:
        type: string
      emotional_state:
        type: string
      employee_first_name:
        type: string
      employee_id:
        type: integer
      employee_last_name:
        type: string
      id:
        type: integer
      report_text:
        type: string
      title:
        type: string
      type:
        type: string
    type: object
  api.GetRoleByIDApiResponse:
    properties:
      id:
        type: integer
      name:
        type: string
    type: object
  api.GetSenderByIdResponse:
    properties:
      address:
        type: string
      btwnumber:
        type: string
      client_number:
        type: string
      contacts:
        items:
          $ref: '#/definitions/api.Contact'
        type: array
      created_at:
        type: string
      email_address:
        type: string
      id:
        type: integer
      is_archived:
        type: boolean
      kvknumber:
        type: string
      land:
        type: string
      name:
        type: string
      phone_number:
        type: string
      place:
        type: string
      postal_code:
        type: string
      types:
        type: string
      updated_at:
        type: string
    type: object
  api.ListAssignedEmployeesResponse:
    properties:
      client_id:
        type: integer
      created_at:
        type: string
      employee_id:
        type: integer
      employee_name:
        type: string
      id:
        type: integer
      role:
        type: string
      start_date:
        type: string
    type: object
  api.ListClientAllergiesResponse:
    properties:
      allergy_type:
        type: string
      client_id:
        type: integer
      created_at:
        type: string
      id:
        type: integer
      notes:
        type: string
      reaction:
        type: string
      severity:
        type: string
    type: object
  api.ListClientDiagnosesResponse:
    properties:
      client_id:
        type: integer
      created_at:
        type: string
      description:
        type: string
      diagnosing_clinician:
        type: string
      diagnosis_code:
        type: string
      id:
        type: integer
      notes:
        type: string
      severity:
        type: string
      status:
        type: string
      title:
        type: string
    type: object
  api.ListClientDocumentsApiResponse:
    properties:
      attachment_uuid:
        type: string
      client_id:
        type: integer
      created_at:
        type: string
      file:
        type: string
      id:
        type: integer
      is_used:
        type: boolean
      label:
        type: string
      name:
        type: string
      size:
        type: integer
      tag:
        type: string
      updated_at:
        type: string
      uuid:
        type: string
    type: object
  api.ListClientEmergencyContactsResponse:
    properties:
      address:
        type: string
      client_id:
        type: integer
      created_at:
        type: string
      email:
        type: string
      first_name:
        type: string
      goals_reports:
        type: boolean
      id:
        type: integer
      incidents_reports:
        type: boolean
      is_verified:
        type: boolean
      last_name:
        type: string
      medical_reports:
        type: boolean
      phone_number:
        type: string
      relation_status:
        type: string
      relationship:
        type: string
    type: object
  api.ListClientMaturityMatrixAssessmentsResponse:
    properties:
      client_id:
        type: integer
      current_level:
        type: integer
      end_date:
        $ref: '#/definitions/pgtype.Date'
      id:
        type: integer
      initial_level:
        type: integer
      is_active:
        type: boolean
      matrix_assessment_id:
        type: integer
      start_date:
        $ref: '#/definitions/pgtype.Date'
      topic_name:
        type: string
    type: object
  api.ListClientMedicationsResponse:
    properties:
      administered_by_first_name:
        type: string
      administered_by_id:
        type: integer
      administered_by_last_name:
        type: string
      client_id:
        type: integer
      created_at:
        type: string
      dosage:
        type: string
      end_date:
        type: string
      id:
        type: integer
      is_critical:
        type: boolean
      name:
        type: string
      notes:
        type: string
      self_administered:
        type: boolean
      start_date:
        type: string
      updated_at:
        type: string
    type: object
  api.ListClientsApiResponse:
    properties:
      addresses:
        items:
          $ref: '#/definitions/api.Address'
        type: array
      birthplace:
        type: string
      bsn:
        type: string
      created_at:
        type: string
      date_of_birth:
        type: string
      departement:
        type: string
      departure_reason:
        type: string
      departure_report:
        type: string
      email:
        type: string
      filenumber:
        type: string
      first_name:
        type: string
      gender:
        type: string
      has_untaken_medications:
        type: boolean
      id:
        type: integer
      identity:
        type: boolean
      infix:
        type: string
      last_name:
        type: string
      legal_measure:
        type: string
      location_id:
        type: integer
      organisation:
        type: string
      phone_number:
        type: string
      profile_picture:
        type: string
      sender_id:
        type: integer
      source:
        type: string
      status:
        type: string
    type: object
  api.ListEmployeeCertificationResponse:
    properties:
      date_issued:
        type: string
      employee_id:
        type: integer
      id:
        type: integer
      issued_by:
        type: string
      name:
        type: string
    type: object
  api.ListEmployeeEducationResponse:
    properties:
      degree:
        type: string
      employee_id:
        type: integer
      end_date:
        type: string
      field_of_study:
        type: string
      id:
        type: integer
      institution_name:
        type: string
      start_date:
        type: string
    type: object
  api.ListEmployeeExperienceResponse:
    properties:
      company_name:
        type: string
      created_at:
        type: string
      description:
        type: string
      employee_id:
        type: integer
      end_date:
        type: string
      id:
        type: integer
      job_title:
        type: string
      start_date:
        type: string
    type: object
  api.ListEmployeeResponse:
    properties:
      authentication_phone_number:
        type: string
      created_at:
        type: string
      date_of_birth:
        type: string
      department:
        type: string
      email:
        type: string
      employee_number:
        type: string
      employment_number:
        type: string
      first_name:
        type: string
      gender:
        type: string
      has_borrowed:
        type: boolean
      home_telephone_number:
        type: string
      id:
        type: integer
      is_archived:
        type: boolean
      is_subcontractor:
        type: boolean
      last_name:
        type: string
      location_id:
        type: integer
      out_of_service:
        type: boolean
      position:
        type: string
      private_email_address:
        type: string
      private_phone_number:
        type: string
      profile_picture:
        type: string
      user_id:
        type: integer
      work_phone_number:
        type: string
    type: object
  api.ListIncidentsResponse:
    properties:
      accident:
        type: boolean
      additional_appointments:
        type: string
      cause_explanation:
        type: string
      client_absence:
        type: boolean
      client_id:
        type: integer
      client_options:
        items:
          type: string
        type: array
      created_at:
        type: string
      emails:
        items:
          type: string
        type: array
      employee_absenteeism:
        type: string
      employee_first_name:
        type: string
      employee_id:
        type: integer
      employee_last_name:
        type: string
      fire_water_damage:
        type: boolean
      id:
        type: integer
      incident_date:
        type: string
      incident_explanation:
        type: string
      incident_prevent_steps:
        type: string
      incident_taken_measures:
        type: string
      incident_type:
        type: string
      inform_who:
        items:
          type: string
        type: array
      is_confirmed:
        type: boolean
      location_id:
        type: integer
      medicines:
        type: boolean
      mese_worker:
        items:
          type: string
        type: array
      needed_consultation:
        type: string
      organization:
        type: boolean
      organizational:
        items:
          type: string
        type: array
      other:
        type: boolean
      other_cause:
        type: string
      other_desc:
        type: string
      other_notifications:
        type: boolean
      passing_away:
        type: boolean
      physical_injury:
        type: string
      physical_injury_desc:
        type: string
      psychological_damage:
        type: string
      psychological_damage_desc:
        type: string
      recurrence_risk:
        type: string
      reporter_involvement:
        type: string
      runtime_incident:
        type: string
      self_harm:
        type: boolean
      severity_of_incident:
        type: string
      soft_delete:
        type: boolean
      succession:
        items:
          type: string
        type: array
      succession_desc:
        type: string
      technical:
        items:
          type: string
        type: array
      updated_at:
        type: string
      use_prohibited_substances:
        type: boolean
      violence:
        type: boolean
    type: object
  api.ListLocationsResponse:
    properties:
      address:
        type: string
      capacity:
        type: integer
      id:
        type: integer
      name:
        type: string
    type: object
  api.ListMaturityMatrixResponse:
    properties:
      id:
        type: integer
      topic_name:
        type: string
    type: object
  api.ListProgressReportsResponse:
    properties:
      client_id:
        type: integer
      created_at:
        type: string
      date:
        type: string
      emotional_state:
        type: string
      employee_first_name:
        type: string
      employee_id:
        type: integer
      employee_last_name:
        type: string
      id:
        type: integer
      report_text:
        type: string
      title:
        type: string
      type:
        type: string
    type: object
  api.ListRolesApiResponse:
    properties:
      id:
        type: integer
      name:
        type: string
    type: object
  api.ListSendersResponse:
    properties:
      BTWnumber:
        type: string
      KVKnumber:
        type: string
      address:
        type: string
      client_number:
        type: string
      contacts:
        items:
          $ref: '#/definitions/api.Contact'
        type: array
      created_at:
        type: string
      id:
        type: integer
      land:
        type: string
      name:
        type: string
      phone_number:
        type: string
      place:
        type: string
      postal_code:
        type: string
      types:
        type: string
      updated_at:
        type: string
    type: object
  api.LoginUserRequest:
    properties:
      email:
        example: testemail@gmail.com
        type: string
      password:
        example: t2aha000
        type: string
    required:
    - email
    - password
    type: object
  api.LoginUserResponse:
    properties:
      access:
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
        type: string
      refresh:
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
        type: string
    type: object
  api.MatrixAssessment:
    properties:
      end_date:
        type: string
      id:
        type: integer
      initial_level:
        type: integer
      maturity_matrix_id:
        type: integer
      start_date:
        type: string
    type: object
  api.Permission:
    properties:
      id:
        type: integer
      method:
        type: string
      name:
        type: string
      resource:
        type: string
    type: object
  api.RefreshTokenRequest:
    properties:
      token:
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
        type: string
    required:
    - token
    type: object
  api.RefreshTokenResponse:
    properties:
      access:
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
        type: string
    type: object
  api.Response-any:
    properties:
      data: {}
      message:
        type: string
      success:
        type: boolean
    type: object
  api.Response-api_AddClientDocumentApiResponse:
    properties:
      data:
        $ref: '#/definitions/api.AddClientDocumentApiResponse'
      message:
        type: string
      success:
        type: boolean
    type: object
  api.Response-api_AddEducationToEmployeeProfileResponse:
    properties:
      data:
        $ref: '#/definitions/api.AddEducationToEmployeeProfileResponse'
      message:
        type: string
      success:
        type: boolean
    type: object
  api.Response-api_AddEmployeeCertificationResponse:
    properties:
      data:
        $ref: '#/definitions/api.AddEmployeeCertificationResponse'
      message:
        type: string
      success:
        type: boolean
    type: object
  api.Response-api_AddEmployeeExperienceResponse:
    properties:
      data:
        $ref: '#/definitions/api.AddEmployeeExperienceResponse'
      message:
        type: string
      success:
        type: boolean
    type: object
  api.Response-api_AssignEmployeeResponse:
    properties:
      data:
        $ref: '#/definitions/api.AssignEmployeeResponse'
      message:
        type: string
      success:
        type: boolean
    type: object
  api.Response-api_AssignRoleToUserApiResponse:
    properties:
      data:
        $ref: '#/definitions/api.AssignRoleToUserApiResponse'
      message:
        type: string
      success:
        type: boolean
    type: object
  api.Response-api_ConfirmIncidentResponse:
    properties:
      data:
        $ref: '#/definitions/api.ConfirmIncidentResponse'
      message:
        type: string
      success:
        type: boolean
    type: object
  api.Response-api_CorrectSpellingResponse:
    properties:
      data:
        $ref: '#/definitions/api.CorrectSpellingResponse'
      message:
        type: string
      success:
        type: boolean
    type: object
  api.Response-api_CreateAppointmentCardResponse:
    properties:
      data:
        $ref: '#/definitions/api.CreateAppointmentCardResponse'
      message:
        type: string
      success:
        type: boolean
    type: object
  api.Response-api_CreateClientAllergyResponse:
    properties:
      data:
        $ref: '#/definitions/api.CreateClientAllergyResponse'
      message:
        type: string
      success:
        type: boolean
    type: object
  api.Response-api_CreateClientDetailsResponse:
    properties:
      data:
        $ref: '#/definitions/api.CreateClientDetailsResponse'
      message:
        type: string
      success:
        type: boolean
    type: object
  api.Response-api_CreateClientDiagnosisResponse:
    properties:
      data:
        $ref: '#/definitions/api.CreateClientDiagnosisResponse'
      message:
        type: string
      success:
        type: boolean
    type: object
  api.Response-api_CreateClientEmergencyContactResponse:
    properties:
      data:
        $ref: '#/definitions/api.CreateClientEmergencyContactResponse'
      message:
        type: string
      success:
        type: boolean
    type: object
  api.Response-api_CreateClientMaturityMatrixAssessmentResponse:
    properties:
      data:
        $ref: '#/definitions/api.CreateClientMaturityMatrixAssessmentResponse'
      message:
        type: string
      success:
        type: boolean
    type: object
  api.Response-api_CreateClientMedicationResponse:
    properties:
      data:
        $ref: '#/definitions/api.CreateClientMedicationResponse'
      message:
        type: string
      success:
        type: boolean
    type: object
  api.Response-api_CreateEmployeeProfileResponse:
    properties:
      data:
        $ref: '#/definitions/api.CreateEmployeeProfileResponse'
      message:
        type: string
      success:
        type: boolean
    type: object
  api.Response-api_CreateIncidentResponse:
    properties:
      data:
        $ref: '#/definitions/api.CreateIncidentResponse'
      message:
        type: string
      success:
        type: boolean
    type: object
  api.Response-api_CreateLocationResponse:
    properties:
      data:
        $ref: '#/definitions/api.CreateLocationResponse'
      message:
        type: string
      success:
        type: boolean
    type: object
  api.Response-api_CreateProgressReportResponse:
    properties:
      data:
        $ref: '#/definitions/api.CreateProgressReportResponse'
      message:
        type: string
      success:
        type: boolean
    type: object
  api.Response-api_CreateSenderResponse:
    properties:
      data:
        $ref: '#/definitions/api.CreateSenderResponse'
      message:
        type: string
      success:
        type: boolean
    type: object
  api.Response-api_DeleteAssignedEmployeeResponse:
    properties:
      data:
        $ref: '#/definitions/api.DeleteAssignedEmployeeResponse'
      message:
        type: string
      success:
        type: boolean
    type: object
  api.Response-api_DeleteAttachmentResponse:
    properties:
      data:
        $ref: '#/definitions/api.DeleteAttachmentResponse'
      message:
        type: string
      success:
        type: boolean
    type: object
  api.Response-api_DeleteClientDocumentApiResponse:
    properties:
      data:
        $ref: '#/definitions/api.DeleteClientDocumentApiResponse'
      message:
        type: string
      success:
        type: boolean
    type: object
  api.Response-api_DeleteClientEmergencyContactResponse:
    properties:
      data:
        $ref: '#/definitions/api.DeleteClientEmergencyContactResponse'
      message:
        type: string
      success:
        type: boolean
    type: object
  api.Response-api_DeleteEmployeeCertificationResponse:
    properties:
      data:
        $ref: '#/definitions/api.DeleteEmployeeCertificationResponse'
      message:
        type: string
      success:
        type: boolean
    type: object
  api.Response-api_DeleteEmployeeEducationResponse:
    properties:
      data:
        $ref: '#/definitions/api.DeleteEmployeeEducationResponse'
      message:
        type: string
      success:
        type: boolean
    type: object
  api.Response-api_DeleteEmployeeExperienceResponse:
    properties:
      data:
        $ref: '#/definitions/api.DeleteEmployeeExperienceResponse'
      message:
        type: string
      success:
        type: boolean
    type: object
  api.Response-api_DeleteLocationResponse:
    properties:
      data:
        $ref: '#/definitions/api.DeleteLocationResponse'
      message:
        type: string
      success:
        type: boolean
    type: object
  api.Response-api_GenerateAutoReportsResponse:
    properties:
      data:
        $ref: '#/definitions/api.GenerateAutoReportsResponse'
      message:
        type: string
      success:
        type: boolean
    type: object
  api.Response-api_GenerateIncidentFileResponse:
    properties:
      data:
        $ref: '#/definitions/api.GenerateIncidentFileResponse'
      message:
        type: string
      success:
        type: boolean
    type: object
  api.Response-api_GetAppointmentCardResponse:
    properties:
      data:
        $ref: '#/definitions/api.GetAppointmentCardResponse'
      message:
        type: string
      success:
        type: boolean
    type: object
  api.Response-api_GetAssignedEmployeeResponse:
    properties:
      data:
        $ref: '#/definitions/api.GetAssignedEmployeeResponse'
      message:
        type: string
      success:
        type: boolean
    type: object
  api.Response-api_GetAttachmentByIdResponse:
    properties:
      data:
        $ref: '#/definitions/api.GetAttachmentByIdResponse'
      message:
        type: string
      success:
        type: boolean
    type: object
  api.Response-api_GetClientAllergyResponse:
    properties:
      data:
        $ref: '#/definitions/api.GetClientAllergyResponse'
      message:
        type: string
      success:
        type: boolean
    type: object
  api.Response-api_GetClientApiResponse:
    properties:
      data:
        $ref: '#/definitions/api.GetClientApiResponse'
      message:
        type: string
      success:
        type: boolean
    type: object
  api.Response-api_GetClientDiagnosisResponse:
    properties:
      data:
        $ref: '#/definitions/api.GetClientDiagnosisResponse'
      message:
        type: string
      success:
        type: boolean
    type: object
  api.Response-api_GetClientEmergencyContactResponse:
    properties:
      data:
        $ref: '#/definitions/api.GetClientEmergencyContactResponse'
      message:
        type: string
      success:
        type: boolean
    type: object
  api.Response-api_GetClientMedicationResponse:
    properties:
      data:
        $ref: '#/definitions/api.GetClientMedicationResponse'
      message:
        type: string
      success:
        type: boolean
    type: object
  api.Response-api_GetClientRelatedEmailsResponse:
    properties:
      data:
        $ref: '#/definitions/api.GetClientRelatedEmailsResponse'
      message:
        type: string
      success:
        type: boolean
    type: object
  api.Response-api_GetEmployeeProfileByIDApiResponse:
    properties:
      data:
        $ref: '#/definitions/api.GetEmployeeProfileByIDApiResponse'
      message:
        type: string
      success:
        type: boolean
    type: object
  api.Response-api_GetEmployeeProfileResponse:
    properties:
      data:
        $ref: '#/definitions/api.GetEmployeeProfileResponse'
      message:
        type: string
      success:
        type: boolean
    type: object
  api.Response-api_GetIncidentResponse:
    properties:
      data:
        $ref: '#/definitions/api.GetIncidentResponse'
      message:
        type: string
      success:
        type: boolean
    type: object
  api.Response-api_GetLocationResponse:
    properties:
      data:
        $ref: '#/definitions/api.GetLocationResponse'
      message:
        type: string
      success:
        type: boolean
    type: object
  api.Response-api_GetMissingClientDocumentsApiResponse:
    properties:
      data:
        $ref: '#/definitions/api.GetMissingClientDocumentsApiResponse'
      message:
        type: string
      success:
        type: boolean
    type: object
  api.Response-api_GetProgressReportResponse:
    properties:
      data:
        $ref: '#/definitions/api.GetProgressReportResponse'
      message:
        type: string
      success:
        type: boolean
    type: object
  api.Response-api_GetRoleByIDApiResponse:
    properties:
      data:
        $ref: '#/definitions/api.GetRoleByIDApiResponse'
      message:
        type: string
      success:
        type: boolean
    type: object
  api.Response-api_GetSenderByIdResponse:
    properties:
      data:
        $ref: '#/definitions/api.GetSenderByIdResponse'
      message:
        type: string
      success:
        type: boolean
    type: object
  api.Response-api_ListClientEmergencyContactsResponse:
    properties:
      data:
        $ref: '#/definitions/api.ListClientEmergencyContactsResponse'
      message:
        type: string
      success:
        type: boolean
    type: object
  api.Response-api_LoginUserResponse:
    properties:
      data:
        $ref: '#/definitions/api.LoginUserResponse'
      message:
        type: string
      success:
        type: boolean
    type: object
  api.Response-api_RefreshTokenResponse:
    properties:
      data:
        $ref: '#/definitions/api.RefreshTokenResponse'
      message:
        type: string
      success:
        type: boolean
    type: object
  api.Response-api_SetClientProfilePictureResponse:
    properties:
      data:
        $ref: '#/definitions/api.SetClientProfilePictureResponse'
      message:
        type: string
      success:
        type: boolean
    type: object
  api.Response-api_SetEmployeeProfilePictureResponse:
    properties:
      data:
        $ref: '#/definitions/api.SetEmployeeProfilePictureResponse'
      message:
        type: string
      success:
        type: boolean
    type: object
  api.Response-api_UpdateAppointmentCardResponse:
    properties:
      data:
        $ref: '#/definitions/api.UpdateAppointmentCardResponse'
      message:
        type: string
      success:
        type: boolean
    type: object
  api.Response-api_UpdateAssignedEmployeeResponse:
    properties:
      data:
        $ref: '#/definitions/api.UpdateAssignedEmployeeResponse'
      message:
        type: string
      success:
        type: boolean
    type: object
  api.Response-api_UpdateClientAllergyResponse:
    properties:
      data:
        $ref: '#/definitions/api.UpdateClientAllergyResponse'
      message:
        type: string
      success:
        type: boolean
    type: object
  api.Response-api_UpdateClientDiagnosisResponse:
    properties:
      data:
        $ref: '#/definitions/api.UpdateClientDiagnosisResponse'
      message:
        type: string
      success:
        type: boolean
    type: object
  api.Response-api_UpdateClientEmergencyContactResponse:
    properties:
      data:
        $ref: '#/definitions/api.UpdateClientEmergencyContactResponse'
      message:
        type: string
      success:
        type: boolean
    type: object
  api.Response-api_UpdateClientMedicationResponse:
    properties:
      data:
        $ref: '#/definitions/api.UpdateClientMedicationResponse'
      message:
        type: string
      success:
        type: boolean
    type: object
  api.Response-api_UpdateEmployeeCertificationResponse:
    properties:
      data:
        $ref: '#/definitions/api.UpdateEmployeeCertificationResponse'
      message:
        type: string
      success:
        type: boolean
    type: object
  api.Response-api_UpdateEmployeeEducationResponse:
    properties:
      data:
        $ref: '#/definitions/api.UpdateEmployeeEducationResponse'
      message:
        type: string
      success:
        type: boolean
    type: object
  api.Response-api_UpdateEmployeeExperienceResponse:
    properties:
      data:
        $ref: '#/definitions/api.UpdateEmployeeExperienceResponse'
      message:
        type: string
      success:
        type: boolean
    type: object
  api.Response-api_UpdateEmployeeProfileResponse:
    properties:
      data:
        $ref: '#/definitions/api.UpdateEmployeeProfileResponse'
      message:
        type: string
      success:
        type: boolean
    type: object
  api.Response-api_UpdateIncidentResponse:
    properties:
      data:
        $ref: '#/definitions/api.UpdateIncidentResponse'
      message:
        type: string
      success:
        type: boolean
    type: object
  api.Response-api_UpdateLocationResponse:
    properties:
      data:
        $ref: '#/definitions/api.UpdateLocationResponse'
      message:
        type: string
      success:
        type: boolean
    type: object
  api.Response-api_UpdateProgressReportResponse:
    properties:
      data:
        $ref: '#/definitions/api.UpdateProgressReportResponse'
      message:
        type: string
      success:
        type: boolean
    type: object
  api.Response-api_UpdateSenderResponse:
    properties:
      data:
        $ref: '#/definitions/api.UpdateSenderResponse'
      message:
        type: string
      success:
        type: boolean
    type: object
  api.Response-api_UploadHandlerResponse:
    properties:
      data:
        $ref: '#/definitions/api.UploadHandlerResponse'
      message:
        type: string
      success:
        type: boolean
    type: object
  api.Response-array_api_GetPermissionsByRoleIDApiResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/api.GetPermissionsByRoleIDApiResponse'
        type: array
      message:
        type: string
      success:
        type: boolean
    type: object
  api.Response-array_api_ListEmployeeCertificationResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/api.ListEmployeeCertificationResponse'
        type: array
      message:
        type: string
      success:
        type: boolean
    type: object
  api.Response-array_api_ListEmployeeEducationResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/api.ListEmployeeEducationResponse'
        type: array
      message:
        type: string
      success:
        type: boolean
    type: object
  api.Response-array_api_ListEmployeeExperienceResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/api.ListEmployeeExperienceResponse'
        type: array
      message:
        type: string
      success:
        type: boolean
    type: object
  api.Response-array_api_ListLocationsResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/api.ListLocationsResponse'
        type: array
      message:
        type: string
      success:
        type: boolean
    type: object
  api.Response-array_api_ListMaturityMatrixResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/api.ListMaturityMatrixResponse'
        type: array
      message:
        type: string
      success:
        type: boolean
    type: object
  api.Response-array_api_ListRolesApiResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/api.ListRolesApiResponse'
        type: array
      message:
        type: string
      success:
        type: boolean
    type: object
  api.Response-array_api_SearchEmployeesByNameOrEmailResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/api.SearchEmployeesByNameOrEmailResponse'
        type: array
      message:
        type: string
      success:
        type: boolean
    type: object
  api.Response-pagination_Response-api_ListAssignedEmployeesResponse:
    properties:
      data:
        $ref: '#/definitions/pagination.Response-api_ListAssignedEmployeesResponse'
      message:
        type: string
      success:
        type: boolean
    type: object
  api.Response-pagination_Response-api_ListClientAllergiesResponse:
    properties:
      data:
        $ref: '#/definitions/pagination.Response-api_ListClientAllergiesResponse'
      message:
        type: string
      success:
        type: boolean
    type: object
  api.Response-pagination_Response-api_ListClientDiagnosesResponse:
    properties:
      data:
        $ref: '#/definitions/pagination.Response-api_ListClientDiagnosesResponse'
      message:
        type: string
      success:
        type: boolean
    type: object
  api.Response-pagination_Response-api_ListClientDocumentsApiResponse:
    properties:
      data:
        $ref: '#/definitions/pagination.Response-api_ListClientDocumentsApiResponse'
      message:
        type: string
      success:
        type: boolean
    type: object
  api.Response-pagination_Response-api_ListClientMaturityMatrixAssessmentsResponse:
    properties:
      data:
        $ref: '#/definitions/pagination.Response-api_ListClientMaturityMatrixAssessmentsResponse'
      message:
        type: string
      success:
        type: boolean
    type: object
  api.Response-pagination_Response-api_ListClientMedicationsResponse:
    properties:
      data:
        $ref: '#/definitions/pagination.Response-api_ListClientMedicationsResponse'
      message:
        type: string
      success:
        type: boolean
    type: object
  api.Response-pagination_Response-api_ListClientsApiResponse:
    properties:
      data:
        $ref: '#/definitions/pagination.Response-api_ListClientsApiResponse'
      message:
        type: string
      success:
        type: boolean
    type: object
  api.Response-pagination_Response-api_ListEmployeeResponse:
    properties:
      data:
        $ref: '#/definitions/pagination.Response-api_ListEmployeeResponse'
      message:
        type: string
      success:
        type: boolean
    type: object
  api.Response-pagination_Response-api_ListIncidentsResponse:
    properties:
      data:
        $ref: '#/definitions/pagination.Response-api_ListIncidentsResponse'
      message:
        type: string
      success:
        type: boolean
    type: object
  api.Response-pagination_Response-api_ListSendersResponse:
    properties:
      data:
        $ref: '#/definitions/pagination.Response-api_ListSendersResponse'
      message:
        type: string
      success:
        type: boolean
    type: object
  api.Response-pagination_Response-array_api_ListProgressReportsResponse:
    properties:
      data:
        $ref: '#/definitions/pagination.Response-array_api_ListProgressReportsResponse'
      message:
        type: string
      success:
        type: boolean
    type: object
  api.SearchEmployeesByNameOrEmailResponse:
    properties:
      email:
        type: string
      first_name:
        type: string
      id:
        type: integer
      last_name:
        type: string
    type: object
  api.SetClientProfilePictureRequest:
    properties:
      attachement_id:
        type: string
    required:
    - attachement_id
    type: object
  api.SetClientProfilePictureResponse:
    properties:
      id:
        type: integer
      profile_picture:
        type: string
    type: object
  api.SetEmployeeProfilePictureRequest:
    properties:
      attachement_id:
        type: string
    required:
    - attachement_id
    type: object
  api.SetEmployeeProfilePictureResponse:
    properties:
      email:
        type: string
      id:
        type: integer
      profile_picture:
        type: string
      role_id:
        type: integer
    type: object
  api.UpdateAppointmentCardRequest:
    properties:
      general_information:
        items:
          type: string
        type: array
      household_info:
        items:
          type: string
        type: array
      important_contacts:
        items:
          type: string
        type: array
      leave:
        items:
          type: string
        type: array
      organization_agreements:
        items:
          type: string
        type: array
      school_internship:
        items:
          type: string
        type: array
      smoking_rules:
        items:
          type: string
        type: array
      travel:
        items:
          type: string
        type: array
      treatment_agreements:
        items:
          type: string
        type: array
      work:
        items:
          type: string
        type: array
      youth_officer_agreements:
        items:
          type: string
        type: array
    type: object
  api.UpdateAppointmentCardResponse:
    properties:
      client_id:
        type: integer
      created_at:
        type: string
      general_information:
        items:
          type: string
        type: array
      household_info:
        items:
          type: string
        type: array
      id:
        type: integer
      important_contacts:
        items:
          type: string
        type: array
      leave:
        items:
          type: string
        type: array
      organization_agreements:
        items:
          type: string
        type: array
      school_internship:
        items:
          type: string
        type: array
      smoking_rules:
        items:
          type: string
        type: array
      travel:
        items:
          type: string
        type: array
      treatment_agreements:
        items:
          type: string
        type: array
      updated_at:
        type: string
      work:
        items:
          type: string
        type: array
      youth_officer_agreements:
        items:
          type: string
        type: array
    type: object
  api.UpdateAssignedEmployeeRequest:
    properties:
      employee_id:
        type: integer
      role:
        type: string
      start_date:
        type: string
    type: object
  api.UpdateAssignedEmployeeResponse:
    properties:
      client_id:
        type: integer
      created_at:
        type: string
      employee_id:
        type: integer
      id:
        type: integer
      role:
        type: string
      start_date:
        type: string
    type: object
  api.UpdateClientAllergyRequest:
    properties:
      allergy_type_id:
        type: string
      notes:
        type: string
      reaction:
        type: string
      severity:
        type: string
    type: object
  api.UpdateClientAllergyResponse:
    properties:
      allergy_type_id:
        type: string
      client_id:
        type: integer
      created_at:
        type: string
      id:
        type: integer
      notes:
        type: string
      reaction:
        type: string
      severity:
        type: string
    type: object
  api.UpdateClientDiagnosisRequest:
    properties:
      description:
        type: string
      diagnosing_clinician:
        type: string
      diagnosis_code:
        type: string
      notes:
        type: string
      severity:
        type: string
      status:
        type: string
      title:
        type: string
    type: object
  api.UpdateClientDiagnosisResponse:
    properties:
      client_id:
        type: integer
      created_at:
        $ref: '#/definitions/pgtype.Timestamptz'
      description:
        type: string
      diagnosing_clinician:
        type: string
      diagnosis_code:
        type: string
      id:
        type: integer
      notes:
        type: string
      severity:
        type: string
      status:
        type: string
      title:
        type: string
    type: object
  api.UpdateClientEmergencyContactParams:
    properties:
      address:
        type: string
      email:
        type: string
      first_name:
        type: string
      goals_reports:
        type: boolean
      incidents_reports:
        type: boolean
      last_name:
        type: string
      medical_reports:
        type: boolean
      phone_number:
        type: string
      relation_status:
        type: string
      relationship:
        type: string
    type: object
  api.UpdateClientEmergencyContactResponse:
    properties:
      address:
        type: string
      client_id:
        type: integer
      created_at:
        type: string
      email:
        type: string
      first_name:
        type: string
      goals_reports:
        type: boolean
      id:
        type: integer
      incidents_reports:
        type: boolean
      is_verified:
        type: boolean
      last_name:
        type: string
      medical_reports:
        type: boolean
      phone_number:
        type: string
      relation_status:
        type: string
      relationship:
        type: string
    type: object
  api.UpdateClientMedicationRequest:
    properties:
      administered_by_id:
        type: integer
      dosage:
        type: string
      end_date:
        type: string
      is_critical:
        type: boolean
      name:
        type: string
      notes:
        type: string
      self_administered:
        type: boolean
      start_date:
        type: string
    type: object
  api.UpdateClientMedicationResponse:
    properties:
      administered_by_id:
        type: integer
      client_id:
        type: integer
      created_at:
        type: string
      dosage:
        type: string
      end_date:
        type: string
      id:
        type: integer
      is_critical:
        type: boolean
      name:
        type: string
      notes:
        type: string
      self_administered:
        type: boolean
      start_date:
        type: string
      updated_at:
        type: string
    type: object
  api.UpdateEmployeeCertificationRequest:
    properties:
      date_issued:
        type: string
      issued_by:
        type: string
      name:
        type: string
    type: object
  api.UpdateEmployeeCertificationResponse:
    properties:
      created_at:
        type: string
      date_issued:
        type: string
      employee_id:
        type: integer
      id:
        type: integer
      issued_by:
        type: string
      name:
        type: string
    type: object
  api.UpdateEmployeeEducationRequest:
    properties:
      degree:
        type: string
      end_date:
        type: string
      field_of_study:
        type: string
      institution_name:
        type: string
      start_date:
        type: string
    type: object
  api.UpdateEmployeeEducationResponse:
    properties:
      degree:
        type: string
      end_date:
        type: string
      field_of_study:
        type: string
      id:
        type: integer
      institution_name:
        type: string
      start_date:
        type: string
    type: object
  api.UpdateEmployeeExperienceRequest:
    properties:
      company_name:
        type: string
      description:
        type: string
      end_date:
        type: string
      job_title:
        type: string
      start_date:
        type: string
    type: object
  api.UpdateEmployeeExperienceResponse:
    properties:
      company_name:
        type: string
      created_at:
        type: string
      description:
        type: string
      employee_id:
        type: integer
      end_date:
        type: string
      id:
        type: integer
      job_title:
        type: string
      start_date:
        type: string
    type: object
  api.UpdateEmployeeProfileResponse:
    properties:
      authentication_phone_number:
        type: string
      created_at:
        type: string
      date_of_birth:
        type: string
      department:
        type: string
      email:
        type: string
      employee_number:
        type: string
      employment_number:
        type: string
      first_name:
        type: string
      gender:
        type: string
      has_borrowed:
        type: boolean
      home_telephone_number:
        type: string
      id:
        type: integer
      is_archived:
        type: boolean
      is_subcontractor:
        type: boolean
      last_name:
        type: string
      location_id:
        type: integer
      out_of_service:
        type: boolean
      position:
        type: string
      private_email_address:
        type: string
      private_phone_number:
        type: string
      user_id:
        type: integer
      work_phone_number:
        type: string
    type: object
  api.UpdateIncidentRequest:
    properties:
      accident:
        type: boolean
      additional_appointments:
        type: string
      cause_explanation:
        type: string
      client_absence:
        type: boolean
      client_options:
        items:
          type: string
        type: array
      emails:
        items:
          type: string
        type: array
      employee_absenteeism:
        type: string
      employee_id:
        type: integer
      fire_water_damage:
        type: boolean
      id:
        type: integer
      incident_date:
        type: string
      incident_explanation:
        type: string
      incident_prevent_steps:
        type: string
      incident_taken_measures:
        type: string
      incident_type:
        type: string
      inform_who:
        items:
          type: string
        type: array
      location_id:
        type: integer
      medicines:
        type: boolean
      mese_worker:
        items:
          type: string
        type: array
      needed_consultation:
        type: string
      organization:
        type: boolean
      organizational:
        items:
          type: string
        type: array
      other:
        type: boolean
      other_cause:
        type: string
      other_desc:
        type: string
      other_notifications:
        type: boolean
      passing_away:
        type: boolean
      physical_injury:
        type: string
      physical_injury_desc:
        type: string
      psychological_damage:
        type: string
      psychological_damage_desc:
        type: string
      recurrence_risk:
        type: string
      reporter_involvement:
        type: string
      runtime_incident:
        type: string
      self_harm:
        type: boolean
      severity_of_incident:
        type: string
      succession:
        items:
          type: string
        type: array
      succession_desc:
        type: string
      technical:
        items:
          type: string
        type: array
      use_prohibited_substances:
        type: boolean
      violence:
        type: boolean
    type: object
  api.UpdateIncidentResponse:
    properties:
      accident:
        type: boolean
      additional_appointments:
        type: string
      cause_explanation:
        type: string
      client_absence:
        type: boolean
      client_id:
        type: integer
      client_options:
        items:
          type: string
        type: array
      created:
        type: string
      emails:
        items:
          type: string
        type: array
      employee_absenteeism:
        type: string
      employee_id:
        type: integer
      fire_water_damage:
        type: boolean
      id:
        type: integer
      incident_date:
        type: string
      incident_explanation:
        type: string
      incident_prevent_steps:
        type: string
      incident_taken_measures:
        type: string
      incident_type:
        type: string
      inform_who:
        items:
          type: string
        type: array
      is_confirmed:
        type: boolean
      location_id:
        type: integer
      medicines:
        type: boolean
      mese_worker:
        items:
          type: string
        type: array
      needed_consultation:
        type: string
      organization:
        type: boolean
      organizational:
        items:
          type: string
        type: array
      other:
        type: boolean
      other_cause:
        type: string
      other_desc:
        type: string
      other_notifications:
        type: boolean
      passing_away:
        type: boolean
      physical_injury:
        type: string
      physical_injury_desc:
        type: string
      psychological_damage:
        type: string
      psychological_damage_desc:
        type: string
      recurrence_risk:
        type: string
      reporter_involvement:
        type: string
      runtime_incident:
        type: string
      self_harm:
        type: boolean
      severity_of_incident:
        type: string
      soft_delete:
        type: boolean
      succession:
        items:
          type: string
        type: array
      succession_desc:
        type: string
      technical:
        items:
          type: string
        type: array
      updated:
        type: string
      use_prohibited_substances:
        type: boolean
      violence:
        type: boolean
    type: object
  api.UpdateLocationRequest:
    properties:
      address:
        type: string
      capacity:
        type: integer
      name:
        type: string
    type: object
  api.UpdateLocationResponse:
    properties:
      address:
        type: string
      capacity:
        type: integer
      id:
        type: integer
      name:
        type: string
    type: object
  api.UpdateProgressReportRequest:
    properties:
      client_id:
        type: integer
      date:
        type: string
      emotional_state:
        type: string
      employee_id:
        type: integer
      report_text:
        type: string
      title:
        type: string
      type:
        type: string
    type: object
  api.UpdateProgressReportResponse:
    properties:
      client_id:
        type: integer
      created_at:
        type: string
      date:
        type: string
      emotional_state:
        type: string
      employee_id:
        type: integer
      id:
        type: integer
      report_text:
        type: string
      title:
        type: string
      type:
        type: string
    type: object
  api.UpdateSenderRequest:
    properties:
      address:
        type: string
      btwnumber:
        type: string
      client_number:
        type: string
      contacts:
        items:
          $ref: '#/definitions/api.Contact'
        type: array
      email_address:
        type: string
      is_archived:
        type: boolean
      kvknumber:
        type: string
      land:
        type: string
      name:
        type: string
      phone_number:
        type: string
      place:
        type: string
      postal_code:
        type: string
      types:
        enum:
        - main_provider
        - local_authority
        - particular_party
        - healthcare_institution
        type: string
    type: object
  api.UpdateSenderResponse:
    properties:
      address:
        type: string
      btwnumber:
        type: string
      client_number:
        type: string
      contacts:
        items:
          $ref: '#/definitions/api.Contact'
        type: array
      created_at:
        type: string
      email_address:
        type: string
      id:
        type: integer
      is_archived:
        type: boolean
      kvknumber:
        type: string
      land:
        type: string
      name:
        type: string
      phone_number:
        type: string
      place:
        type: string
      postal_code:
        type: string
      types:
        type: string
      updated_at:
        type: string
    type: object
  api.UploadHandlerResponse:
    properties:
      created_at:
        type: string
      file_id:
        type: string
      file_url:
        type: string
      size:
        type: integer
    type: object
  pagination.Response-api_ListAssignedEmployeesResponse:
    properties:
      count:
        type: integer
      next:
        type: string
      page_size:
        type: integer
      previous:
        type: string
      results:
        items:
          $ref: '#/definitions/api.ListAssignedEmployeesResponse'
        type: array
    type: object
  pagination.Response-api_ListClientAllergiesResponse:
    properties:
      count:
        type: integer
      next:
        type: string
      page_size:
        type: integer
      previous:
        type: string
      results:
        items:
          $ref: '#/definitions/api.ListClientAllergiesResponse'
        type: array
    type: object
  pagination.Response-api_ListClientDiagnosesResponse:
    properties:
      count:
        type: integer
      next:
        type: string
      page_size:
        type: integer
      previous:
        type: string
      results:
        items:
          $ref: '#/definitions/api.ListClientDiagnosesResponse'
        type: array
    type: object
  pagination.Response-api_ListClientDocumentsApiResponse:
    properties:
      count:
        type: integer
      next:
        type: string
      page_size:
        type: integer
      previous:
        type: string
      results:
        items:
          $ref: '#/definitions/api.ListClientDocumentsApiResponse'
        type: array
    type: object
  pagination.Response-api_ListClientMaturityMatrixAssessmentsResponse:
    properties:
      count:
        type: integer
      next:
        type: string
      page_size:
        type: integer
      previous:
        type: string
      results:
        items:
          $ref: '#/definitions/api.ListClientMaturityMatrixAssessmentsResponse'
        type: array
    type: object
  pagination.Response-api_ListClientMedicationsResponse:
    properties:
      count:
        type: integer
      next:
        type: string
      page_size:
        type: integer
      previous:
        type: string
      results:
        items:
          $ref: '#/definitions/api.ListClientMedicationsResponse'
        type: array
    type: object
  pagination.Response-api_ListClientsApiResponse:
    properties:
      count:
        type: integer
      next:
        type: string
      page_size:
        type: integer
      previous:
        type: string
      results:
        items:
          $ref: '#/definitions/api.ListClientsApiResponse'
        type: array
    type: object
  pagination.Response-api_ListEmployeeResponse:
    properties:
      count:
        type: integer
      next:
        type: string
      page_size:
        type: integer
      previous:
        type: string
      results:
        items:
          $ref: '#/definitions/api.ListEmployeeResponse'
        type: array
    type: object
  pagination.Response-api_ListIncidentsResponse:
    properties:
      count:
        type: integer
      next:
        type: string
      page_size:
        type: integer
      previous:
        type: string
      results:
        items:
          $ref: '#/definitions/api.ListIncidentsResponse'
        type: array
    type: object
  pagination.Response-api_ListSendersResponse:
    properties:
      count:
        type: integer
      next:
        type: string
      page_size:
        type: integer
      previous:
        type: string
      results:
        items:
          $ref: '#/definitions/api.ListSendersResponse'
        type: array
    type: object
  pagination.Response-array_api_ListProgressReportsResponse:
    properties:
      count:
        type: integer
      next:
        type: string
      page_size:
        type: integer
      previous:
        type: string
      results:
        items:
          items:
            $ref: '#/definitions/api.ListProgressReportsResponse'
          type: array
        type: array
    type: object
  pgtype.Date:
    properties:
      infinityModifier:
        $ref: '#/definitions/pgtype.InfinityModifier'
      time:
        type: string
      valid:
        type: boolean
    type: object
  pgtype.InfinityModifier:
    enum:
    - 1
    - 0
    - -1
    type: integer
    x-enum-varnames:
    - Infinity
    - Finite
    - NegativeInfinity
  pgtype.Timestamptz:
    properties:
      infinityModifier:
        $ref: '#/definitions/pgtype.InfinityModifier'
      time:
        type: string
      valid:
        type: boolean
    type: object
info:
  contact:
    email: your-email@domain.com
    name: API Support
  description: This is the Maicare server API documentation.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Maicare API
  version: "1.0"
paths:
  /ai/spelling_check:
    post:
      consumes:
      - application/json
      description: Check spelling of a text
      parameters:
      - description: Request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/api.CorrectSpellingRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Response-api_CorrectSpellingResponse'
      summary: Check spelling of a text
      tags:
      - ai
  /attachments/{id}:
    delete:
      description: Delete an attachment by its ID
      parameters:
      - description: Attachment ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Response-api_DeleteAttachmentResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Response-any'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.Response-any'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Response-any'
      summary: Delete an attachment by ID
      tags:
      - attachments
    get:
      description: Get an attachment by its ID
      parameters:
      - description: Attachment ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Response-api_GetAttachmentByIdResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Response-any'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.Response-any'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Response-any'
      summary: Get an attachment by ID
      tags:
      - attachments
  /attachments/upload:
    post:
      consumes:
      - multipart/form-data
      description: Upload a file to the server
      parameters:
      - description: File to upload
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/api.Response-api_UploadHandlerResponse'
      summary: Upload a file
      tags:
      - attachments
  /auth/refresh:
    post:
      consumes:
      - application/json
      description: Refresh access token using refresh token
      parameters:
      - description: Refresh token
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/api.RefreshTokenRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Response-api_RefreshTokenResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Response-any'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/api.Response-any'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.Response-any'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/api.Response-any'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Response-any'
      security:
      - '-': []
      summary: Refresh access token
      tags:
      - authentication
  /auth/token:
    post:
      consumes:
      - application/json
      description: Authenticate user and return access and refresh tokens
      parameters:
      - description: Login credentials
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/api.LoginUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully authenticated
          schema:
            $ref: '#/definitions/api.Response-api_LoginUserResponse'
        "400":
          description: Bad request - Invalid input
          schema:
            $ref: '#/definitions/api.Response-any'
        "401":
          description: Unauthorized - Invalid credentials
          schema:
            $ref: '#/definitions/api.Response-any'
        "404":
          description: Not found - User not found
          schema:
            $ref: '#/definitions/api.Response-any'
        "409":
          description: Conflict - Account status issue
          schema:
            $ref: '#/definitions/api.Response-any'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/api.Response-any'
      security:
      - '-': []
      summary: Generate authentication tokens
      tags:
      - authentication
  /clients:
    get:
      parameters:
      - description: Client status
        in: query
        name: status
        type: string
      - description: Location ID
        in: query
        name: location_id
        type: integer
      - description: Search query
        in: query
        name: search
        type: string
      - description: Page number
        in: query
        name: page
        type: integer
      - description: Page size
        in: query
        name: page_size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Response-pagination_Response-api_ListClientsApiResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Response-any'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.Response-any'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Response-any'
      summary: List clients
      tags:
      - clients
    post:
      consumes:
      - application/json
      parameters:
      - description: Client details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/api.CreateClientDetailsRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/api.Response-api_CreateClientDetailsResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Response-any'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.Response-any'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Response-any'
      summary: Create a new client
      tags:
      - clients
  /clients/{id}:
    get:
      parameters:
      - description: Client ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Response-api_GetClientApiResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Response-any'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.Response-any'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Response-any'
      summary: Get a client
      tags:
      - clients
  /clients/{id}/allergies:
    get:
      consumes:
      - application/json
      parameters:
      - description: Client ID
        in: path
        name: id
        required: true
        type: integer
      - description: Page number
        in: query
        name: page
        type: integer
      - description: Page size
        in: query
        name: page_size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Response-pagination_Response-api_ListClientAllergiesResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Response-any'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.Response-any'
      summary: List all client allergies
      tags:
      - client_Medical
    post:
      consumes:
      - application/json
      parameters:
      - description: Client ID
        in: path
        name: id
        required: true
        type: integer
      - description: Client allergy data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/api.CreateClientAllergyRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/api.Response-api_CreateClientAllergyResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Response-any'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.Response-any'
      summary: Create a client allergy
      tags:
      - client_Medical
  /clients/{id}/allergies/{allergy_id}:
    delete:
      parameters:
      - description: Client ID
        in: path
        name: id
        required: true
        type: integer
      - description: Allergy ID
        in: path
        name: allergy_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Response-any'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Response-any'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.Response-any'
      summary: Delete a client allergy
      tags:
      - client_Medical
    get:
      parameters:
      - description: Client ID
        in: path
        name: id
        required: true
        type: integer
      - description: Allergy ID
        in: path
        name: allergy_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Response-api_GetClientAllergyResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Response-any'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.Response-any'
      summary: Get a client allergy
      tags:
      - client_Medical
    put:
      consumes:
      - application/json
      parameters:
      - description: Client ID
        in: path
        name: id
        required: true
        type: integer
      - description: Allergy ID
        in: path
        name: allergy_id
        required: true
        type: integer
      - description: Client allergy data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/api.UpdateClientAllergyRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Response-api_UpdateClientAllergyResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Response-any'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.Response-any'
      summary: Update a client allergy
      tags:
      - client_Medical
  /clients/{id}/appointment_cards:
    get:
      description: Get an appointment card by client ID
      parameters:
      - description: Client ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Response-api_GetAppointmentCardResponse'
      summary: Get an appointment card by client ID
      tags:
      - appointment_cards
    post:
      consumes:
      - application/json
      description: Create a new appointment card
      parameters:
      - description: Client ID
        in: path
        name: id
        required: true
        type: integer
      - description: Request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/api.CreateAppointmentCardRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/api.Response-api_CreateAppointmentCardResponse'
      summary: Create a new appointment card
      tags:
      - appointment_cards
    put:
      consumes:
      - application/json
      description: Update an appointment card by client ID
      parameters:
      - description: Client ID
        in: path
        name: id
        required: true
        type: integer
      - description: Request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/api.UpdateAppointmentCardRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Response-api_UpdateAppointmentCardResponse'
      summary: Update an appointment card by client ID
      tags:
      - appointment_cards
  /clients/{id}/diagnosis:
    get:
      consumes:
      - application/json
      parameters:
      - description: Client ID
        in: path
        name: id
        required: true
        type: integer
      - description: Page number
        in: query
        name: page
        type: integer
      - description: Page size
        in: query
        name: page_size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Response-pagination_Response-api_ListClientDiagnosesResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Response-any'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.Response-any'
      summary: List all client diagnoses
      tags:
      - client_Medical
    post:
      consumes:
      - application/json
      parameters:
      - description: Client ID
        in: path
        name: id
        required: true
        type: integer
      - description: Client diagnosis data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/api.CreateClientDiagnosisRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/api.Response-api_CreateClientDiagnosisResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Response-any'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.Response-any'
      summary: Create a client diagnosis
      tags:
      - client_Medical
  /clients/{id}/diagnosis/{diagnosis_id}:
    delete:
      parameters:
      - description: Client ID
        in: path
        name: id
        required: true
        type: integer
      - description: Diagnosis ID
        in: path
        name: diagnosis_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Response-any'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Response-any'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.Response-any'
      summary: Delete a client diagnosis
      tags:
      - client_Medical
    get:
      parameters:
      - description: Client ID
        in: path
        name: id
        required: true
        type: integer
      - description: Diagnosis ID
        in: path
        name: diagnosis_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Response-api_GetClientDiagnosisResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Response-any'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.Response-any'
      summary: Get a client diagnosis
      tags:
      - client_Medical
    put:
      consumes:
      - application/json
      parameters:
      - description: Client ID
        in: path
        name: id
        required: true
        type: integer
      - description: Diagnosis ID
        in: path
        name: diagnosis_id
        required: true
        type: integer
      - description: Client diagnosis data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/api.UpdateClientDiagnosisRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Response-api_UpdateClientDiagnosisResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Response-any'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.Response-any'
      summary: Update a client diagnosis
      tags:
      - client_Medical
  /clients/{id}/documents:
    get:
      parameters:
      - description: Client ID
        in: path
        name: id
        required: true
        type: integer
      - description: Page number
        in: query
        name: page
        type: integer
      - description: Page size
        in: query
        name: page_size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Response-pagination_Response-api_ListClientDocumentsApiResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Response-any'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.Response-any'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Response-any'
      summary: List documents of a client
      tags:
      - clients
    post:
      consumes:
      - application/json
      parameters:
      - description: Client ID
        in: path
        name: id
        required: true
        type: integer
      - description: Client document
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/api.AddClientDocumentApiRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/api.Response-api_AddClientDocumentApiResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Response-any'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.Response-any'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Response-any'
      summary: Add a document to a client
      tags:
      - clients
  /clients/{id}/documents/{document_id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Client ID
        in: path
        name: id
        required: true
        type: integer
      - description: Document ID
        in: path
        name: document_id
        required: true
        type: integer
      - description: Client document
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/api.DeleteClientDocumentApiRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Response-api_DeleteClientDocumentApiResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Response-any'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.Response-any'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Response-any'
      summary: Delete a client document
      tags:
      - clients
  /clients/{id}/emergency_contacts:
    get:
      parameters:
      - description: Client ID
        in: path
        name: id
        required: true
        type: integer
      - description: Page number
        in: query
        name: page
        type: integer
      - description: Page size
        in: query
        name: page_size
        type: integer
      - description: Search query
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Response-api_ListClientEmergencyContactsResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Response-any'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.Response-any'
      summary: List all client emergency contacts
      tags:
      - client_network
    post:
      consumes:
      - application/json
      parameters:
      - description: Client ID
        in: path
        name: id
        required: true
        type: integer
      - description: Client emergency contact data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/api.CreateClientEmergencyContactParams'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/api.Response-api_CreateClientEmergencyContactResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Response-any'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.Response-any'
      summary: Create a client emergency contact
      tags:
      - client_network
  /clients/{id}/emergency_contacts/{contact_id}:
    delete:
      parameters:
      - description: Client ID
        in: path
        name: id
        required: true
        type: integer
      - description: Contact ID
        in: path
        name: contact_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Response-api_DeleteClientEmergencyContactResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Response-any'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.Response-any'
      summary: Delete a client emergency contact
      tags:
      - client_network
    get:
      parameters:
      - description: Client ID
        in: path
        name: id
        required: true
        type: integer
      - description: Contact ID
        in: path
        name: contact_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Response-api_GetClientEmergencyContactResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Response-any'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.Response-any'
      summary: Get a client emergency contact
      tags:
      - client_network
    put:
      consumes:
      - application/json
      parameters:
      - description: Client ID
        in: path
        name: id
        required: true
        type: integer
      - description: Contact ID
        in: path
        name: contact_id
        required: true
        type: integer
      - description: Client emergency contact data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/api.UpdateClientEmergencyContactParams'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Response-api_UpdateClientEmergencyContactResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Response-any'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.Response-any'
      summary: Update a client emergency contact
      tags:
      - client_network
  /clients/{id}/incidents:
    get:
      parameters:
      - description: Client ID
        in: path
        name: id
        required: true
        type: integer
      - description: Page number
        in: query
        name: page
        type: integer
      - description: Page size
        in: query
        name: page_size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Response-pagination_Response-api_ListIncidentsResponse'
      summary: List all incidents
      tags:
      - incidents
    post:
      consumes:
      - application/json
      parameters:
      - description: Client ID
        in: path
        name: id
        required: true
        type: integer
      - description: Incident data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/api.CreateIncidentRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/api.Response-api_CreateIncidentResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Response-any'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.Response-any'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Response-any'
      summary: Create an incident
      tags:
      - incidents
  /clients/{id}/incidents/{incident_id}:
    get:
      parameters:
      - description: Client ID
        in: path
        name: id
        required: true
        type: integer
      - description: Incident ID
        in: path
        name: incident_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Response-api_GetIncidentResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Response-any'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.Response-any'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Response-any'
      summary: Retrieve an incident
      tags:
      - incidents
    put:
      parameters:
      - description: Client ID
        in: path
        name: id
        required: true
        type: integer
      - description: Incident ID
        in: path
        name: incident_id
        required: true
        type: integer
      - description: Incident
        in: body
        name: incident
        required: true
        schema:
          $ref: '#/definitions/api.UpdateIncidentRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Response-api_UpdateIncidentResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Response-any'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.Response-any'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Response-any'
      summary: Update an incident
      tags:
      - incidents
  /clients/{id}/incidents/{incident_id}/file:
    get:
      parameters:
      - description: Incident ID
        in: path
        name: incident_id
        required: true
        type: integer
      - description: Client ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Response-api_GenerateIncidentFileResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Response-any'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.Response-any'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Response-any'
      summary: Generate an incident file
      tags:
      - incidents
  /clients/{id}/involved_employees:
    get:
      parameters:
      - description: Client ID
        in: path
        name: id
        required: true
        type: integer
      - description: Page number
        in: query
        name: page
        type: integer
      - description: Page size
        in: query
        name: page_size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Response-pagination_Response-api_ListAssignedEmployeesResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Response-any'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.Response-any'
      summary: List all assigned employees
      tags:
      - client_network
    post:
      consumes:
      - application/json
      parameters:
      - description: Client ID
        in: path
        name: id
        required: true
        type: integer
      - description: Employee assignment data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/api.AssignEmployeeRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/api.Response-api_AssignEmployeeResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Response-any'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.Response-any'
      summary: Assign an employee to a client
      tags:
      - client_network
  /clients/{id}/involved_employees/{assign_id}:
    delete:
      parameters:
      - description: Client ID
        in: path
        name: id
        required: true
        type: integer
      - description: Assignment ID
        in: path
        name: assign_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Response-api_DeleteAssignedEmployeeResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Response-any'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.Response-any'
      summary: Delete an assigned employee
      tags:
      - client_network
    get:
      parameters:
      - description: Client ID
        in: path
        name: id
        required: true
        type: integer
      - description: Assignment ID
        in: path
        name: assign_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Response-api_GetAssignedEmployeeResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Response-any'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.Response-any'
      summary: Get an assigned employee
      tags:
      - client_network
    put:
      consumes:
      - application/json
      parameters:
      - description: Client ID
        in: path
        name: id
        required: true
        type: integer
      - description: Assignment ID
        in: path
        name: assign_id
        required: true
        type: integer
      - description: Assigned employee data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/api.UpdateAssignedEmployeeRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Response-api_UpdateAssignedEmployeeResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Response-any'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.Response-any'
      summary: Update an assigned employee
      tags:
      - client_network
  /clients/{id}/maturity_matrix_assessment:
    get:
      description: Get a list of client maturity matrix assessments
      parameters:
      - description: Client ID
        in: path
        name: id
        required: true
        type: integer
      - description: Page number
        in: query
        name: page
        type: integer
      - description: Page size
        in: query
        name: page_size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Response-pagination_Response-api_ListClientMaturityMatrixAssessmentsResponse'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/api.Response-any'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/api.Response-any'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/api.Response-any'
      summary: List client maturity matrix assessments
      tags:
      - client
    post:
      consumes:
      - application/json
      description: Create a client maturity matrix assessment
      parameters:
      - description: Client ID
        in: path
        name: id
        required: true
        type: integer
      - description: Request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/api.CreateClientMaturityMatrixAssessmentRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/api.Response-api_CreateClientMaturityMatrixAssessmentResponse'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/api.Response-any'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/api.Response-any'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/api.Response-any'
      summary: Create client maturity matrix assessment
      tags:
      - client
  /clients/{id}/medications:
    get:
      parameters:
      - description: Client ID
        in: path
        name: id
        required: true
        type: integer
      - description: Page number
        in: query
        name: page
        type: integer
      - description: Page size
        in: query
        name: page_size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Response-pagination_Response-api_ListClientMedicationsResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Response-any'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.Response-any'
      summary: List all client medications
      tags:
      - client_Medical
    post:
      consumes:
      - application/json
      parameters:
      - description: Client ID
        in: path
        name: id
        required: true
        type: integer
      - description: Client medication data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/api.CreateclientMedicationRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/api.Response-api_CreateClientMedicationResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Response-any'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.Response-any'
      summary: Create a client medication
      tags:
      - client_Medical
  /clients/{id}/medications/{medication_id}:
    delete:
      parameters:
      - description: Client ID
        in: path
        name: id
        required: true
        type: integer
      - description: Medication ID
        in: path
        name: medication_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Response-any'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Response-any'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.Response-any'
      summary: Delete a client medication
      tags:
      - client_Medical
    get:
      parameters:
      - description: Client ID
        in: path
        name: id
        required: true
        type: integer
      - description: Medication ID
        in: path
        name: medication_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Response-api_GetClientMedicationResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Response-any'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.Response-any'
      summary: Get a client medication
      tags:
      - client_Medical
    put:
      consumes:
      - application/json
      parameters:
      - description: Client ID
        in: path
        name: id
        required: true
        type: integer
      - description: Medication ID
        in: path
        name: medication_id
        required: true
        type: integer
      - description: Client medication data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/api.UpdateClientMedicationRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Response-api_UpdateClientMedicationResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Response-any'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.Response-any'
      summary: Update a client medication
      tags:
      - client_Medical
  /clients/{id}/missing_documents:
    get:
      parameters:
      - description: Client ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Response-api_GetMissingClientDocumentsApiResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Response-any'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.Response-any'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Response-any'
      summary: Get missing documents of a client
      tags:
      - clients
  /clients/{id}/profile_picture:
    put:
      consumes:
      - application/json
      parameters:
      - description: Client ID
        in: path
        name: id
        required: true
        type: integer
      - description: Client profile picture
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/api.SetClientProfilePictureRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Response-api_SetClientProfilePictureResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Response-any'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.Response-any'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Response-any'
      summary: Set a client profile picture
      tags:
      - clients
  /clients/{id}/progress_reports:
    get:
      parameters:
      - description: Client ID
        in: path
        name: id
        required: true
        type: integer
      - description: Page number
        in: query
        name: page
        type: integer
      - description: Page size
        in: query
        name: page_size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Response-pagination_Response-array_api_ListProgressReportsResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Response-any'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.Response-any'
      summary: List all progress reports for a client
      tags:
      - progress_reports
    post:
      consumes:
      - application/json
      parameters:
      - description: Client ID
        in: path
        name: id
        required: true
        type: integer
      - description: Progress Report Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/api.CreateProgressReportRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/api.Response-api_CreateProgressReportResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Response-any'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.Response-any'
      summary: Create a new progress report for a client
      tags:
      - progress_reports
  /clients/{id}/progress_reports/{report_id}:
    get:
      parameters:
      - description: Client ID
        in: path
        name: id
        required: true
        type: integer
      - description: Progress Report ID
        in: path
        name: report_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Response-api_GetProgressReportResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Response-any'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.Response-any'
      summary: Retrieve a progress report for a client
      tags:
      - progress_reports
    put:
      consumes:
      - application/json
      parameters:
      - description: Client ID
        in: path
        name: id
        required: true
        type: integer
      - description: Progress Report ID
        in: path
        name: report_id
        required: true
        type: integer
      - description: Progress Report Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/api.UpdateProgressReportRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Response-api_UpdateProgressReportResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Response-any'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.Response-any'
      summary: Update a progress report for a client
      tags:
      - progress_reports
  /clients/{id}/progress_reports/auto:
    post:
      consumes:
      - application/json
      description: Generate auto reports
      parameters:
      - description: Request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/api.GenerateAutoReportsRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Response-api_GenerateAutoReportsResponse'
      summary: Generate auto reports
      tags:
      - progress_reports
  /clients/{id}/related_emails:
    get:
      parameters:
      - description: Client ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Response-api_GetClientRelatedEmailsResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Response-any'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.Response-any'
      summary: Get client related emails
      tags:
      - client_network
  /employees:
    get:
      description: Get a paginated list of employee profiles with optional filters
      parameters:
      - description: Page number
        in: query
        name: page
        type: integer
      - description: Page size
        in: query
        name: page_size
        type: integer
      - description: Include archived employees
        in: query
        name: is_archived
        type: boolean
      - description: Include out of service employees
        in: query
        name: out_of_service
        type: boolean
      - description: Filter by department
        in: query
        name: department
        type: string
      - description: Filter by position
        in: query
        name: position
        type: string
      - description: Filter by location ID
        in: query
        name: location_id
        type: integer
      - description: Search term for employee name or number
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Response-pagination_Response-api_ListEmployeeResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Response-any'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/api.Response-any'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.Response-any'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/api.Response-any'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Response-any'
      summary: List employee profiles
      tags:
      - employees
    post:
      consumes:
      - application/json
      description: Create a new employee profile with associated user account
      parameters:
      - description: Employee profile details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/api.CreateEmployeeProfileRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/api.Response-api_CreateEmployeeProfileResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Response-any'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/api.Response-any'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.Response-any'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/api.Response-any'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Response-any'
      summary: Create employee profile
      tags:
      - employees
  /employees/{id}:
    get:
      description: Get employee profile by ID
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Response-api_GetEmployeeProfileByIDApiResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Response-any'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/api.Response-any'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.Response-any'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/api.Response-any'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Response-any'
      summary: Get employee profile by  ID
      tags:
      - employees
    put:
      description: Update employee profile by ID
      parameters:
      - description: Employee ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Response-api_UpdateEmployeeProfileResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Response-any'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/api.Response-any'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.Response-any'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/api.Response-any'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Response-any'
      summary: Update employee profile by ID
      tags:
      - employees
  /employees/{id}/certification:
    get:
      description: Get a list of certifications for employee profile
      parameters:
      - description: Employee ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Response-array_api_ListEmployeeCertificationResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Response-any'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/api.Response-any'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.Response-any'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/api.Response-any'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Response-any'
      summary: List certifications for employee profile
      tags:
      - employees
    post:
      description: Add certification to employee profile
      parameters:
      - description: Employee ID
        in: path
        name: id
        required: true
        type: integer
      - description: Certification details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/api.AddEmployeeCertificationRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/api.Response-api_AddEmployeeCertificationResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Response-any'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/api.Response-any'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.Response-any'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/api.Response-any'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Response-any'
      summary: Add certification to employee profile
      tags:
      - employees
  /employees/{id}/certification/{certification_id}:
    delete:
      description: Delete certification for employee profile
      parameters:
      - description: Employee ID
        in: path
        name: id
        required: true
        type: integer
      - description: Certification ID
        in: path
        name: certification_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Response-api_DeleteEmployeeCertificationResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Response-any'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/api.Response-any'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.Response-any'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/api.Response-any'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Response-any'
      summary: Delete certification for employee profile
      tags:
      - employees
    put:
      description: Update certification for employee profile
      parameters:
      - description: Employee ID
        in: path
        name: id
        required: true
        type: integer
      - description: Certification ID
        in: path
        name: certification_id
        required: true
        type: integer
      - description: Certification details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/api.UpdateEmployeeCertificationRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Response-api_UpdateEmployeeCertificationResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Response-any'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/api.Response-any'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.Response-any'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/api.Response-any'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Response-any'
      summary: Update certification for employee profile
      tags:
      - employees
  /employees/{id}/education:
    get:
      description: Get a list of education for employee profile
      parameters:
      - description: Employee ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Response-array_api_ListEmployeeEducationResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Response-any'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/api.Response-any'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.Response-any'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/api.Response-any'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Response-any'
      summary: List education for employee profile
      tags:
      - employees
    post:
      consumes:
      - application/json
      description: Add education to employee profile
      parameters:
      - description: Employee ID
        in: path
        name: id
        required: true
        type: integer
      - description: Education details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/api.AddEducationToEmployeeProfileRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/api.Response-api_AddEducationToEmployeeProfileResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Response-any'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/api.Response-any'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.Response-any'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/api.Response-any'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Response-any'
      summary: Add education to employee profile
      tags:
      - employees
  /employees/{id}/education/{education_id}:
    delete:
      description: Delete education for employee profile
      parameters:
      - description: Employee ID
        in: path
        name: id
        required: true
        type: integer
      - description: Education ID
        in: path
        name: education_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Response-api_DeleteEmployeeEducationResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Response-any'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/api.Response-any'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.Response-any'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/api.Response-any'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Response-any'
      summary: Delete education for employee profile
      tags:
      - employees
    put:
      description: Update education for employee profile
      parameters:
      - description: Employee ID
        in: path
        name: id
        required: true
        type: integer
      - description: Education ID
        in: path
        name: education_id
        required: true
        type: integer
      - description: Education details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/api.UpdateEmployeeEducationRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Response-api_UpdateEmployeeEducationResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Response-any'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/api.Response-any'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.Response-any'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/api.Response-any'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Response-any'
      summary: Update education for employee profile
      tags:
      - employees
  /employees/{id}/experience:
    get:
      description: Get a list of experience for employee profile
      parameters:
      - description: Employee ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Response-array_api_ListEmployeeExperienceResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Response-any'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/api.Response-any'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.Response-any'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/api.Response-any'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Response-any'
      summary: List experience for employee profile
      tags:
      - employees
    post:
      description: Add experience to employee profile
      parameters:
      - description: Employee ID
        in: path
        name: id
        required: true
        type: integer
      - description: Experience details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/api.AddEmployeeExperienceRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/api.Response-api_AddEmployeeExperienceResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Response-any'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/api.Response-any'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.Response-any'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/api.Response-any'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Response-any'
      summary: Add experience to employee profile
      tags:
      - employees
  /employees/{id}/experience/{experience_id}:
    delete:
      description: Delete experience for employee profile
      parameters:
      - description: Employee ID
        in: path
        name: id
        required: true
        type: integer
      - description: Experience ID
        in: path
        name: experience_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Response-api_DeleteEmployeeExperienceResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Response-any'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/api.Response-any'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.Response-any'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/api.Response-any'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Response-any'
      summary: Delete experience for employee profile
      tags:
      - employees
    put:
      description: Update experience for employee profile
      parameters:
      - description: Employee ID
        in: path
        name: id
        required: true
        type: integer
      - description: Experience ID
        in: path
        name: experience_id
        required: true
        type: integer
      - description: Experience details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/api.UpdateEmployeeExperienceRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Response-api_UpdateEmployeeExperienceResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Response-any'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/api.Response-any'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.Response-any'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/api.Response-any'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Response-any'
      summary: Update experience for employee profile
      tags:
      - employees
  /employees/{id}/profile_picture:
    put:
      consumes:
      - application/json
      description: Set employee profile picture by ID
      parameters:
      - description: Employee ID
        in: path
        name: id
        required: true
        type: integer
      - description: Profile picture details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/api.SetEmployeeProfilePictureRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Response-api_SetEmployeeProfilePictureResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Response-any'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/api.Response-any'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.Response-any'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/api.Response-any'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Response-any'
      summary: Set employee profile picture by ID
      tags:
      - employees
  /employees/emails:
    get:
      description: Search employees by name or email
      parameters:
      - description: Search query
        in: query
        name: search
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Response-array_api_SearchEmployeesByNameOrEmailResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Response-any'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/api.Response-any'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.Response-any'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/api.Response-any'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Response-any'
      summary: Search employees by name or email
      tags:
      - employees
  /employees/profile:
    get:
      description: Get employee profile by user ID
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Response-api_GetEmployeeProfileResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Response-any'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/api.Response-any'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.Response-any'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/api.Response-any'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Response-any'
      summary: Get employee profile by user ID
      tags:
      - employees
  /incidents/{incident_id}/confirm:
    put:
      parameters:
      - description: Incident ID
        in: path
        name: incident_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Response-api_ConfirmIncidentResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Response-any'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.Response-any'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Response-any'
      summary: Confirm an incident
      tags:
      - incidents
  /locations:
    get:
      description: Get a list of all locations
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Response-array_api_ListLocationsResponse'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/api.Response-any'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/api.Response-any'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/api.Response-any'
      summary: List all locations
      tags:
      - locations
    post:
      consumes:
      - application/json
      description: Create a new location
      parameters:
      - description: Create location
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/api.CreateLocationRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Response-api_CreateLocationResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Response-any'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.Response-any'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Response-any'
      summary: Create a location
      tags:
      - locations
  /locations/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a location
      parameters:
      - description: Location ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Response-api_DeleteLocationResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Response-any'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.Response-any'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Response-any'
      summary: Delete a location
      tags:
      - locations
    get:
      consumes:
      - application/json
      description: Get a location
      parameters:
      - description: Location ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Response-api_GetLocationResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Response-any'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.Response-any'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Response-any'
      summary: Get a location
      tags:
      - locations
    put:
      consumes:
      - application/json
      description: Update a location
      parameters:
      - description: Location ID
        in: path
        name: id
        required: true
        type: integer
      - description: Update location
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/api.UpdateLocationRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Response-api_UpdateLocationResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Response-any'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.Response-any'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Response-any'
      summary: Update a location
      tags:
      - locations
  /maturity_matrix:
    get:
      description: Get a list of all maturity matrix
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Response-array_api_ListMaturityMatrixResponse'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/api.Response-any'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/api.Response-any'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/api.Response-any'
      summary: List all maturity matrix
      tags:
      - maturity_matrix
  /roles:
    get:
      description: List all roles
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Response-array_api_ListRolesApiResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Response-any'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.Response-any'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Response-any'
      summary: List roles
      tags:
      - roles
  /roles/{role_id}/permissions:
    get:
      description: Get all permissions associated with a role ID
      parameters:
      - description: Role ID
        in: path
        name: role_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Response-array_api_GetPermissionsByRoleIDApiResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Response-any'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.Response-any'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Response-any'
      summary: Get permissions by role ID
      tags:
      - roles
  /roles/assign:
    put:
      consumes:
      - application/json
      description: Assign a role to a user
      parameters:
      - description: Assign role to user
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/api.AssignRoleToUserParams'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Response-api_AssignRoleToUserApiResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Response-any'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.Response-any'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Response-any'
      summary: Assign role to user
      tags:
      - roles
  /roles/user:
    get:
      description: Get a role by ID
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Response-api_GetRoleByIDApiResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Response-any'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.Response-any'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Response-any'
      summary: Get role by ID
      tags:
      - roles
  /senders:
    get:
      consumes:
      - application/json
      description: List senders
      parameters:
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      - description: Search
        in: query
        name: search
        type: string
      - description: Include archived
        in: query
        name: include_archived
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Response-pagination_Response-api_ListSendersResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Response-any'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.Response-any'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Response-any'
      summary: List senders
      tags:
      - senders
    post:
      consumes:
      - application/json
      description: Create a new sender
      parameters:
      - description: Sender data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/api.CreateSenderRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/api.Response-api_CreateSenderResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Response-any'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.Response-any'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Response-any'
      summary: Create a new sender
      tags:
      - senders
  /senders/{id}:
    get:
      description: Get a sender
      parameters:
      - description: Sender ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Response-api_GetSenderByIdResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Response-any'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.Response-any'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Response-any'
      summary: Get a sender
      tags:
      - senders
    put:
      consumes:
      - application/json
      description: Update a sender
      parameters:
      - description: Sender ID
        in: path
        name: id
        required: true
        type: integer
      - description: Sender data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/api.UpdateSenderRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Response-api_UpdateSenderResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Response-any'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.Response-any'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Response-any'
      summary: Update a sender
      tags:
      - senders
security:
- Bearer: []
securityDefinitions:
  Bearer:
    description: Add 'Bearer ' prefix before your JWT token for authentication
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
