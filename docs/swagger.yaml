basePath: /
definitions:
  api.AddEducationToEmployeeProfileRequest:
    properties:
      degree:
        type: string
      end_date:
        type: string
      field_of_study:
        type: string
      institution_name:
        type: string
      start_date:
        type: string
    required:
    - degree
    - end_date
    - field_of_study
    - institution_name
    - start_date
    type: object
  api.AddEducationToEmployeeProfileResponse:
    properties:
      degree:
        type: string
      employee_id:
        type: integer
      end_date:
        type: string
      field_of_study:
        type: string
      id:
        type: integer
      institution_name:
        type: string
      start_date:
        type: string
    type: object
  api.AddEmployeeCertificationRequest:
    properties:
      date_issued:
        type: string
      issued_by:
        type: string
      name:
        type: string
    type: object
  api.AddEmployeeCertificationResponse:
    properties:
      created_at:
        $ref: '#/definitions/pgtype.Timestamptz'
      date_issued:
        $ref: '#/definitions/pgtype.Date'
      employee_id:
        type: integer
      id:
        type: integer
      issued_by:
        type: string
      name:
        type: string
    type: object
  api.AddEmployeeExperienceRequest:
    properties:
      company_name:
        type: string
      description:
        type: string
      end_date:
        type: string
      job_title:
        type: string
      start_date:
        type: string
    required:
    - company_name
    - end_date
    - job_title
    - start_date
    type: object
  api.AddEmployeeExperienceResponse:
    properties:
      company_name:
        type: string
      created_at:
        type: string
      description:
        type: string
      employee_id:
        type: integer
      end_date:
        type: string
      id:
        type: integer
      job_title:
        type: string
      start_date:
        type: string
    type: object
  api.AssignRoleToUserApiResponse:
    properties:
      id:
        type: integer
      role_id:
        type: integer
    type: object
  api.AssignRoleToUserParams:
    properties:
      id:
        type: integer
      role_id:
        type: integer
    type: object
  api.Contact:
    properties:
      email:
        type: string
      name:
        type: string
      phone_number:
        type: string
    type: object
  api.CreateEmployeeProfileRequest:
    properties:
      authentication_phone_number:
        example: "1234567890"
        type: string
      date_of_birth:
        example: "2000-01-01"
        type: string
      department:
        example: IT
        type: string
      email:
        example: emai@exe.com
        type: string
      employee_number:
        example: "123456"
        type: string
      employment_number:
        example: "123456"
        type: string
      first_name:
        example: fara
        type: string
      gender:
        type: string
      home_telephone_number:
        example: "1234567890"
        type: string
      is_subcontractor:
        example: false
        type: boolean
      last_name:
        example: joe
        type: string
      location_id:
        example: 1
        type: integer
      out_of_service:
        example: false
        type: boolean
      position:
        example: developer
        type: string
      private_email_address:
        example: joe@ex.com
        type: string
      private_phone_number:
        example: "1234567890"
        type: string
      role_id:
        example: 1
        type: integer
      work_phone_number:
        example: "1234567890"
        type: string
    required:
    - email
    - first_name
    - last_name
    - role_id
    type: object
  api.CreateEmployeeProfileResponse:
    properties:
      authentication_phone_number:
        type: string
      created_at:
        type: string
      date_of_birth:
        type: string
      department:
        type: string
      email:
        type: string
      employee_number:
        type: string
      employment_number:
        type: string
      first_name:
        type: string
      gender:
        type: string
      has_borrowed:
        type: boolean
      home_telephone_number:
        type: string
      id:
        type: integer
      is_archived:
        type: boolean
      is_subcontractor:
        type: boolean
      last_name:
        type: string
      location_id:
        type: integer
      out_of_service:
        type: boolean
      position:
        type: string
      private_email_address:
        type: string
      private_phone_number:
        type: string
      user_id:
        type: integer
      work_phone_number:
        type: string
    type: object
  api.CreateLocationRequest:
    properties:
      address:
        type: string
      capacity:
        type: integer
      name:
        type: string
    required:
    - address
    - name
    type: object
  api.CreateLocationResponse:
    properties:
      address:
        type: string
      capacity:
        type: integer
      id:
        type: integer
      name:
        type: string
    type: object
  api.CreateSenderRequest:
    properties:
      BTWnumber:
        type: string
      KVKnumber:
        type: string
      address:
        type: string
      client_number:
        type: string
      contacts:
        items:
          $ref: '#/definitions/api.Contact'
        type: array
      land:
        type: string
      name:
        type: string
      phone_number:
        type: string
      place:
        type: string
      postal_code:
        type: string
      types:
        enum:
        - main_provider
        - local_authority
        - particular_party
        - healthcare_institution
        type: string
    required:
    - name
    - types
    type: object
  api.CreateSenderResponse:
    properties:
      BTWnumber:
        type: string
      KVKnumber:
        type: string
      address:
        type: string
      client_number:
        type: string
      contacts:
        items:
          $ref: '#/definitions/api.Contact'
        type: array
      created_at:
        type: string
      id:
        type: integer
      land:
        type: string
      name:
        type: string
      phone_number:
        type: string
      place:
        type: string
      postal_code:
        type: string
      types:
        type: string
      updated_at:
        type: string
    type: object
  api.DeleteLocationResponse:
    properties:
      id:
        type: integer
    type: object
  api.GetEmployeeProfileByIDApiResponse:
    properties:
      authentication_phone_number:
        type: string
      created_at:
        type: string
      date_of_birth:
        type: string
      department:
        type: string
      email:
        type: string
      employee_number:
        type: string
      employment_number:
        type: string
      first_name:
        type: string
      gender:
        type: string
      has_borrowed:
        type: boolean
      home_telephone_number:
        type: string
      id:
        type: integer
      is_archived:
        type: boolean
      is_subcontractor:
        type: boolean
      last_name:
        type: string
      location_id:
        type: integer
      out_of_service:
        type: boolean
      position:
        type: string
      private_email_address:
        type: string
      private_phone_number:
        type: string
      profile_picture:
        type: string
      role_id:
        type: integer
      user_id:
        type: integer
      work_phone_number:
        type: string
    type: object
  api.GetEmployeeProfileResponse:
    properties:
      email:
        type: string
      employee_id:
        type: integer
      first_name:
        type: string
      last_name:
        type: string
      permissions:
        items:
          $ref: '#/definitions/api.Permission'
        type: array
      role_id:
        type: integer
      user_id:
        type: integer
    type: object
  api.GetLocationResponse:
    properties:
      address:
        type: string
      capacity:
        type: integer
      id:
        type: integer
      name:
        type: string
    type: object
  api.GetPermissionsByRoleIDApiResponse:
    properties:
      id:
        type: integer
      method:
        type: string
      name:
        type: string
      resource:
        type: string
    type: object
  api.GetRoleByIDApiResponse:
    properties:
      id:
        type: integer
      name:
        type: string
    type: object
  api.ListEmployeeCertificationResponse:
    properties:
      date_issued:
        $ref: '#/definitions/pgtype.Date'
      employee_id:
        type: integer
      id:
        type: integer
      issued_by:
        type: string
      name:
        type: string
    type: object
  api.ListEmployeeEducationResponse:
    properties:
      degree:
        type: string
      employee_id:
        type: integer
      end_date:
        type: string
      field_of_study:
        type: string
      id:
        type: integer
      institution_name:
        type: string
      start_date:
        type: string
    type: object
  api.ListEmployeeExperienceResponse:
    properties:
      company_name:
        type: string
      created_at:
        type: string
      description:
        type: string
      employee_id:
        type: integer
      end_date:
        type: string
      id:
        type: integer
      job_title:
        type: string
      start_date:
        type: string
    type: object
  api.ListEmployeeResponse:
    properties:
      authentication_phone_number:
        type: string
      created_at:
        type: string
      date_of_birth:
        type: string
      department:
        type: string
      email:
        type: string
      employee_number:
        type: string
      employment_number:
        type: string
      first_name:
        type: string
      gender:
        type: string
      has_borrowed:
        type: boolean
      home_telephone_number:
        type: string
      id:
        type: integer
      is_archived:
        type: boolean
      is_subcontractor:
        type: boolean
      last_name:
        type: string
      location_id:
        type: integer
      out_of_service:
        type: boolean
      position:
        type: string
      private_email_address:
        type: string
      private_phone_number:
        type: string
      profile_picture:
        type: string
      user_id:
        type: integer
      work_phone_number:
        type: string
    type: object
  api.ListLocationsResponse:
    properties:
      address:
        type: string
      capacity:
        type: integer
      id:
        type: integer
      name:
        type: string
    type: object
  api.ListRolesApiResponse:
    properties:
      id:
        type: integer
      name:
        type: string
    type: object
  api.ListSendersResponse:
    properties:
      BTWnumber:
        type: string
      KVKnumber:
        type: string
      address:
        type: string
      client_number:
        type: string
      contacts:
        items:
          $ref: '#/definitions/api.Contact'
        type: array
      created_at:
        type: string
      id:
        type: integer
      land:
        type: string
      name:
        type: string
      phone_number:
        type: string
      place:
        type: string
      postal_code:
        type: string
      types:
        type: string
      updated_at:
        type: string
    type: object
  api.LoginUserRequest:
    properties:
      email:
        example: testemail@gmail.com
        type: string
      password:
        example: t2aha000
        type: string
    required:
    - email
    - password
    type: object
  api.LoginUserResponse:
    properties:
      access:
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
        type: string
      refresh:
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
        type: string
    type: object
  api.Permission:
    properties:
      id:
        type: integer
      method:
        type: string
      name:
        type: string
      resource:
        type: string
    type: object
  api.RefreshTokenRequest:
    properties:
      token:
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
        type: string
    required:
    - token
    type: object
  api.RefreshTokenResponse:
    properties:
      access:
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
        type: string
    type: object
  api.Response-any:
    properties:
      data: {}
      message:
        type: string
      success:
        type: boolean
    type: object
  api.Response-api_AddEducationToEmployeeProfileResponse:
    properties:
      data:
        $ref: '#/definitions/api.AddEducationToEmployeeProfileResponse'
      message:
        type: string
      success:
        type: boolean
    type: object
  api.Response-api_AddEmployeeCertificationResponse:
    properties:
      data:
        $ref: '#/definitions/api.AddEmployeeCertificationResponse'
      message:
        type: string
      success:
        type: boolean
    type: object
  api.Response-api_AddEmployeeExperienceResponse:
    properties:
      data:
        $ref: '#/definitions/api.AddEmployeeExperienceResponse'
      message:
        type: string
      success:
        type: boolean
    type: object
  api.Response-api_AssignRoleToUserApiResponse:
    properties:
      data:
        $ref: '#/definitions/api.AssignRoleToUserApiResponse'
      message:
        type: string
      success:
        type: boolean
    type: object
  api.Response-api_CreateEmployeeProfileResponse:
    properties:
      data:
        $ref: '#/definitions/api.CreateEmployeeProfileResponse'
      message:
        type: string
      success:
        type: boolean
    type: object
  api.Response-api_CreateLocationResponse:
    properties:
      data:
        $ref: '#/definitions/api.CreateLocationResponse'
      message:
        type: string
      success:
        type: boolean
    type: object
  api.Response-api_CreateSenderResponse:
    properties:
      data:
        $ref: '#/definitions/api.CreateSenderResponse'
      message:
        type: string
      success:
        type: boolean
    type: object
  api.Response-api_DeleteLocationResponse:
    properties:
      data:
        $ref: '#/definitions/api.DeleteLocationResponse'
      message:
        type: string
      success:
        type: boolean
    type: object
  api.Response-api_GetEmployeeProfileByIDApiResponse:
    properties:
      data:
        $ref: '#/definitions/api.GetEmployeeProfileByIDApiResponse'
      message:
        type: string
      success:
        type: boolean
    type: object
  api.Response-api_GetEmployeeProfileResponse:
    properties:
      data:
        $ref: '#/definitions/api.GetEmployeeProfileResponse'
      message:
        type: string
      success:
        type: boolean
    type: object
  api.Response-api_GetLocationResponse:
    properties:
      data:
        $ref: '#/definitions/api.GetLocationResponse'
      message:
        type: string
      success:
        type: boolean
    type: object
  api.Response-api_GetRoleByIDApiResponse:
    properties:
      data:
        $ref: '#/definitions/api.GetRoleByIDApiResponse'
      message:
        type: string
      success:
        type: boolean
    type: object
  api.Response-api_LoginUserResponse:
    properties:
      data:
        $ref: '#/definitions/api.LoginUserResponse'
      message:
        type: string
      success:
        type: boolean
    type: object
  api.Response-api_RefreshTokenResponse:
    properties:
      data:
        $ref: '#/definitions/api.RefreshTokenResponse'
      message:
        type: string
      success:
        type: boolean
    type: object
  api.Response-api_UpdateEmployeeCertificationResponse:
    properties:
      data:
        $ref: '#/definitions/api.UpdateEmployeeCertificationResponse'
      message:
        type: string
      success:
        type: boolean
    type: object
  api.Response-api_UpdateEmployeeEducationResponse:
    properties:
      data:
        $ref: '#/definitions/api.UpdateEmployeeEducationResponse'
      message:
        type: string
      success:
        type: boolean
    type: object
  api.Response-api_UpdateEmployeeExperienceResponse:
    properties:
      data:
        $ref: '#/definitions/api.UpdateEmployeeExperienceResponse'
      message:
        type: string
      success:
        type: boolean
    type: object
  api.Response-api_UpdateEmployeeProfileResponse:
    properties:
      data:
        $ref: '#/definitions/api.UpdateEmployeeProfileResponse'
      message:
        type: string
      success:
        type: boolean
    type: object
  api.Response-api_UpdateLocationResponse:
    properties:
      data:
        $ref: '#/definitions/api.UpdateLocationResponse'
      message:
        type: string
      success:
        type: boolean
    type: object
  api.Response-api_UpdateSenderResponse:
    properties:
      data:
        $ref: '#/definitions/api.UpdateSenderResponse'
      message:
        type: string
      success:
        type: boolean
    type: object
  api.Response-array_api_GetPermissionsByRoleIDApiResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/api.GetPermissionsByRoleIDApiResponse'
        type: array
      message:
        type: string
      success:
        type: boolean
    type: object
  api.Response-array_api_ListEmployeeCertificationResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/api.ListEmployeeCertificationResponse'
        type: array
      message:
        type: string
      success:
        type: boolean
    type: object
  api.Response-array_api_ListEmployeeEducationResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/api.ListEmployeeEducationResponse'
        type: array
      message:
        type: string
      success:
        type: boolean
    type: object
  api.Response-array_api_ListEmployeeExperienceResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/api.ListEmployeeExperienceResponse'
        type: array
      message:
        type: string
      success:
        type: boolean
    type: object
  api.Response-array_api_ListLocationsResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/api.ListLocationsResponse'
        type: array
      message:
        type: string
      success:
        type: boolean
    type: object
  api.Response-array_api_ListRolesApiResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/api.ListRolesApiResponse'
        type: array
      message:
        type: string
      success:
        type: boolean
    type: object
  api.Response-pagination_Response-api_ListEmployeeResponse:
    properties:
      data:
        $ref: '#/definitions/pagination.Response-api_ListEmployeeResponse'
      message:
        type: string
      success:
        type: boolean
    type: object
  api.Response-pagination_Response-api_ListSendersResponse:
    properties:
      data:
        $ref: '#/definitions/pagination.Response-api_ListSendersResponse'
      message:
        type: string
      success:
        type: boolean
    type: object
  api.UpdateEmployeeCertificationRequest:
    properties:
      date_issued:
        type: string
      issued_by:
        type: string
      name:
        type: string
    type: object
  api.UpdateEmployeeCertificationResponse:
    properties:
      created_at:
        $ref: '#/definitions/pgtype.Timestamptz'
      date_issued:
        $ref: '#/definitions/pgtype.Date'
      employee_id:
        type: integer
      id:
        type: integer
      issued_by:
        type: string
      name:
        type: string
    type: object
  api.UpdateEmployeeEducationRequest:
    properties:
      degree:
        type: string
      end_date:
        type: string
      field_of_study:
        type: string
      institution_name:
        type: string
      start_date:
        type: string
    type: object
  api.UpdateEmployeeEducationResponse:
    properties:
      degree:
        type: string
      end_date:
        type: string
      field_of_study:
        type: string
      id:
        type: integer
      institution_name:
        type: string
      start_date:
        type: string
    type: object
  api.UpdateEmployeeExperienceRequest:
    properties:
      company_name:
        type: string
      description:
        type: string
      end_date:
        type: string
      job_title:
        type: string
      start_date:
        type: string
    type: object
  api.UpdateEmployeeExperienceResponse:
    properties:
      company_name:
        type: string
      created_at:
        type: string
      description:
        type: string
      employee_id:
        type: integer
      end_date:
        type: string
      id:
        type: integer
      job_title:
        type: string
      start_date:
        type: string
    type: object
  api.UpdateEmployeeProfileResponse:
    properties:
      authentication_phone_number:
        type: string
      created_at:
        $ref: '#/definitions/pgtype.Timestamptz'
      date_of_birth:
        $ref: '#/definitions/pgtype.Date'
      department:
        type: string
      email:
        type: string
      employee_number:
        type: string
      employment_number:
        type: string
      first_name:
        type: string
      gender:
        type: string
      has_borrowed:
        type: boolean
      home_telephone_number:
        type: string
      id:
        type: integer
      is_archived:
        type: boolean
      is_subcontractor:
        type: boolean
      last_name:
        type: string
      location_id:
        type: integer
      out_of_service:
        type: boolean
      position:
        type: string
      private_email_address:
        type: string
      private_phone_number:
        type: string
      user_id:
        type: integer
      work_phone_number:
        type: string
    type: object
  api.UpdateLocationRequest:
    properties:
      address:
        type: string
      capacity:
        type: integer
      name:
        type: string
    type: object
  api.UpdateLocationResponse:
    properties:
      address:
        type: string
      capacity:
        type: integer
      id:
        type: integer
      name:
        type: string
    type: object
  api.UpdateSenderRequest:
    properties:
      address:
        type: string
      btwnumber:
        type: string
      client_number:
        type: string
      contacts:
        items:
          $ref: '#/definitions/api.Contact'
        type: array
      email_address:
        type: string
      is_archived:
        type: boolean
      kvknumber:
        type: string
      land:
        type: string
      name:
        type: string
      phone_number:
        type: string
      place:
        type: string
      postal_code:
        type: string
      types:
        enum:
        - main_provider
        - local_authority
        - particular_party
        - healthcare_institution
        type: string
    type: object
  api.UpdateSenderResponse:
    properties:
      address:
        type: string
      btwnumber:
        type: string
      client_number:
        type: string
      contacts:
        items:
          $ref: '#/definitions/api.Contact'
        type: array
      created_at:
        type: string
      email_address:
        type: string
      id:
        type: integer
      is_archived:
        type: boolean
      kvknumber:
        type: string
      land:
        type: string
      name:
        type: string
      phone_number:
        type: string
      place:
        type: string
      postal_code:
        type: string
      types:
        type: string
      updated_at:
        type: string
    type: object
  api.UploadHandlerResponse:
    properties:
      created_at:
        type: string
      file_id:
        type: string
      file_url:
        type: string
      size:
        type: integer
    type: object
  pagination.Response-api_ListEmployeeResponse:
    properties:
      count:
        type: integer
      next:
        type: string
      page_size:
        type: integer
      previous:
        type: string
      results:
        items:
          $ref: '#/definitions/api.ListEmployeeResponse'
        type: array
    type: object
  pagination.Response-api_ListSendersResponse:
    properties:
      count:
        type: integer
      next:
        type: string
      page_size:
        type: integer
      previous:
        type: string
      results:
        items:
          $ref: '#/definitions/api.ListSendersResponse'
        type: array
    type: object
  pgtype.Date:
    properties:
      infinityModifier:
        $ref: '#/definitions/pgtype.InfinityModifier'
      time:
        type: string
      valid:
        type: boolean
    type: object
  pgtype.InfinityModifier:
    enum:
    - 1
    - 0
    - -1
    type: integer
    x-enum-varnames:
    - Infinity
    - Finite
    - NegativeInfinity
  pgtype.Timestamptz:
    properties:
      infinityModifier:
        $ref: '#/definitions/pgtype.InfinityModifier'
      time:
        type: string
      valid:
        type: boolean
    type: object
info:
  contact:
    email: your-email@domain.com
    name: API Support
  description: This is the Maicare server API documentation.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Maicare API
  version: "1.0"
paths:
  /attachments/upload:
    post:
      consumes:
      - multipart/form-data
      description: Upload a file to the server
      parameters:
      - description: File to upload
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.UploadHandlerResponse'
      security:
      - Bearer: []
      summary: Upload a file
      tags:
      - attachments
  /auth/refresh:
    post:
      consumes:
      - application/json
      description: Refresh access token using refresh token
      parameters:
      - description: Refresh token
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/api.RefreshTokenRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Response-api_RefreshTokenResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Response-any'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/api.Response-any'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.Response-any'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/api.Response-any'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Response-any'
      security:
      - '-': []
      summary: Refresh access token
      tags:
      - authentication
  /auth/token:
    post:
      consumes:
      - application/json
      description: Authenticate user and return access and refresh tokens
      parameters:
      - description: Login credentials
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/api.LoginUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully authenticated
          schema:
            $ref: '#/definitions/api.Response-api_LoginUserResponse'
        "400":
          description: Bad request - Invalid input
          schema:
            $ref: '#/definitions/api.Response-any'
        "401":
          description: Unauthorized - Invalid credentials
          schema:
            $ref: '#/definitions/api.Response-any'
        "404":
          description: Not found - User not found
          schema:
            $ref: '#/definitions/api.Response-any'
        "409":
          description: Conflict - Account status issue
          schema:
            $ref: '#/definitions/api.Response-any'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/api.Response-any'
      security:
      - '-': []
      summary: Generate authentication tokens
      tags:
      - authentication
  /employees:
    get:
      consumes:
      - application/json
      description: Get a paginated list of employee profiles with optional filters
      parameters:
      - description: Page number
        in: query
        name: page
        type: integer
      - description: Page size
        in: query
        name: page_size
        type: integer
      - description: Include archived employees
        in: query
        name: is_archived
        type: boolean
      - description: Include out of service employees
        in: query
        name: out_of_service
        type: boolean
      - description: Filter by department
        in: query
        name: department
        type: string
      - description: Filter by position
        in: query
        name: position
        type: string
      - description: Filter by location ID
        in: query
        name: location_id
        type: integer
      - description: Search term for employee name or number
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Response-pagination_Response-api_ListEmployeeResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Response-any'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/api.Response-any'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.Response-any'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/api.Response-any'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Response-any'
      summary: List employee profiles
      tags:
      - employees
    post:
      consumes:
      - application/json
      description: Create a new employee profile with associated user account
      parameters:
      - description: Employee profile details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/api.CreateEmployeeProfileRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/api.Response-api_CreateEmployeeProfileResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Response-any'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/api.Response-any'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.Response-any'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/api.Response-any'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Response-any'
      summary: Create employee profile
      tags:
      - employees
  /employees/{id}:
    get:
      description: Get employee profile by ID
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Response-api_GetEmployeeProfileByIDApiResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Response-any'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/api.Response-any'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.Response-any'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/api.Response-any'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Response-any'
      summary: Get employee profile by  ID
      tags:
      - employees
    put:
      description: Update employee profile by ID
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Response-api_UpdateEmployeeProfileResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Response-any'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/api.Response-any'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.Response-any'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/api.Response-any'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Response-any'
      summary: Update employee profile by ID
      tags:
      - employees
  /employees/{id}/certification:
    get:
      description: Get a list of certifications for employee profile
      parameters:
      - description: Employee ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Response-array_api_ListEmployeeCertificationResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Response-any'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/api.Response-any'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.Response-any'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/api.Response-any'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Response-any'
      summary: List certifications for employee profile
      tags:
      - employees
    post:
      description: Add certification to employee profile
      parameters:
      - description: Employee ID
        in: path
        name: id
        required: true
        type: integer
      - description: Certification details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/api.AddEmployeeCertificationRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/api.Response-api_AddEmployeeCertificationResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Response-any'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/api.Response-any'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.Response-any'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/api.Response-any'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Response-any'
      summary: Add certification to employee profile
      tags:
      - employees
  /employees/{id}/certification/{certification_id}:
    put:
      description: Update certification for employee profile
      parameters:
      - description: Employee ID
        in: path
        name: id
        required: true
        type: integer
      - description: Certification ID
        in: path
        name: certification_id
        required: true
        type: integer
      - description: Certification details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/api.UpdateEmployeeCertificationRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Response-api_UpdateEmployeeCertificationResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Response-any'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/api.Response-any'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.Response-any'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/api.Response-any'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Response-any'
      summary: Update certification for employee profile
      tags:
      - employees
  /employees/{id}/education:
    get:
      description: Get a list of education for employee profile
      parameters:
      - description: Employee ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Response-array_api_ListEmployeeEducationResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Response-any'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/api.Response-any'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.Response-any'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/api.Response-any'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Response-any'
      summary: List education for employee profile
      tags:
      - employees
    post:
      consumes:
      - application/json
      description: Add education to employee profile
      parameters:
      - description: Employee ID
        in: path
        name: id
        required: true
        type: integer
      - description: Education details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/api.AddEducationToEmployeeProfileRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/api.Response-api_AddEducationToEmployeeProfileResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Response-any'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/api.Response-any'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.Response-any'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/api.Response-any'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Response-any'
      summary: Add education to employee profile
      tags:
      - employees
  /employees/{id}/education/{education_id}:
    put:
      description: Update education for employee profile
      parameters:
      - description: Employee ID
        in: path
        name: id
        required: true
        type: integer
      - description: Education ID
        in: path
        name: education_id
        required: true
        type: integer
      - description: Education details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/api.UpdateEmployeeEducationRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Response-api_UpdateEmployeeEducationResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Response-any'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/api.Response-any'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.Response-any'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/api.Response-any'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Response-any'
      summary: Update education for employee profile
      tags:
      - employees
  /employees/{id}/experience:
    get:
      description: Get a list of experience for employee profile
      parameters:
      - description: Employee ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Response-array_api_ListEmployeeExperienceResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Response-any'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/api.Response-any'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.Response-any'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/api.Response-any'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Response-any'
      summary: List experience for employee profile
      tags:
      - employees
    post:
      description: Add experience to employee profile
      parameters:
      - description: Employee ID
        in: path
        name: id
        required: true
        type: integer
      - description: Experience details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/api.AddEmployeeExperienceRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/api.Response-api_AddEmployeeExperienceResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Response-any'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/api.Response-any'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.Response-any'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/api.Response-any'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Response-any'
      summary: Add experience to employee profile
      tags:
      - employees
  /employees/{id}/experience/{experience_id}:
    put:
      description: Update experience for employee profile
      parameters:
      - description: Employee ID
        in: path
        name: id
        required: true
        type: integer
      - description: Experience ID
        in: path
        name: experience_id
        required: true
        type: integer
      - description: Experience details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/api.UpdateEmployeeExperienceRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Response-api_UpdateEmployeeExperienceResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Response-any'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/api.Response-any'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.Response-any'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/api.Response-any'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Response-any'
      summary: Update experience for employee profile
      tags:
      - employees
  /employees/profile:
    get:
      description: Get employee profile by user ID
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Response-api_GetEmployeeProfileResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Response-any'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/api.Response-any'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.Response-any'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/api.Response-any'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Response-any'
      summary: Get employee profile by user ID
      tags:
      - employees
  /locations:
    get:
      description: Get a list of all locations
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Response-array_api_ListLocationsResponse'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/api.Response-any'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/api.Response-any'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/api.Response-any'
      summary: List all locations
      tags:
      - locations
    post:
      consumes:
      - application/json
      description: Create a new location
      parameters:
      - description: Create location
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/api.CreateLocationRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Response-api_CreateLocationResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Response-any'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.Response-any'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Response-any'
      summary: Create a location
      tags:
      - locations
  /locations/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a location
      parameters:
      - description: Location ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Response-api_DeleteLocationResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Response-any'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.Response-any'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Response-any'
      summary: Delete a location
      tags:
      - locations
    get:
      consumes:
      - application/json
      description: Get a location
      parameters:
      - description: Location ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Response-api_GetLocationResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Response-any'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.Response-any'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Response-any'
      summary: Get a location
      tags:
      - locations
    put:
      consumes:
      - application/json
      description: Update a location
      parameters:
      - description: Location ID
        in: path
        name: id
        required: true
        type: integer
      - description: Update location
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/api.UpdateLocationRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Response-api_UpdateLocationResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Response-any'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.Response-any'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Response-any'
      summary: Update a location
      tags:
      - locations
  /roles:
    get:
      description: List all roles
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Response-array_api_ListRolesApiResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Response-any'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.Response-any'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Response-any'
      summary: List roles
      tags:
      - roles
  /roles/{role_id}/permissions:
    get:
      description: Get all permissions associated with a role ID
      parameters:
      - description: Role ID
        in: path
        name: role_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Response-array_api_GetPermissionsByRoleIDApiResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Response-any'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.Response-any'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Response-any'
      summary: Get permissions by role ID
      tags:
      - roles
  /roles/assign:
    put:
      consumes:
      - application/json
      description: Assign a role to a user
      parameters:
      - description: Assign role to user
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/api.AssignRoleToUserParams'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Response-api_AssignRoleToUserApiResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Response-any'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.Response-any'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Response-any'
      summary: Assign role to user
      tags:
      - roles
  /roles/user:
    get:
      description: Get a role by ID
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Response-api_GetRoleByIDApiResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Response-any'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.Response-any'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Response-any'
      summary: Get role by ID
      tags:
      - roles
  /senders:
    post:
      consumes:
      - application/json
      description: Create a new sender
      parameters:
      - description: Sender data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/api.CreateSenderRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/api.Response-api_CreateSenderResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Response-any'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.Response-any'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Response-any'
      summary: Create a new sender
      tags:
      - senders
  /senders/{id}:
    put:
      consumes:
      - application/json
      description: Update a sender
      parameters:
      - description: Sender ID
        in: path
        name: id
        required: true
        type: integer
      - description: Sender data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/api.UpdateSenderRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Response-api_UpdateSenderResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Response-any'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.Response-any'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Response-any'
      summary: Update a sender
      tags:
      - senders
security:
- Bearer: []
securityDefinitions:
  Bearer:
    description: Add 'Bearer ' prefix before your JWT token for authentication
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
