basePath: /
definitions:
  api.CreateEmployeeProfileRequest:
    properties:
      authentication_phone_number:
        type: string
      date_of_birth:
        type: string
      email_address:
        type: string
      employee_number:
        type: string
      employment_number:
        type: string
      first_name:
        type: string
      gender:
        type: string
      home_telephone_number:
        type: string
      is_subcontractor:
        type: boolean
      last_name:
        type: string
      location:
        type: integer
      out_of_service:
        type: boolean
      private_email_address:
        type: string
      private_phone_number:
        type: string
      work_phone_number:
        type: string
    required:
    - authentication_phone_number
    - date_of_birth
    - email_address
    - employment_number
    - first_name
    - gender
    - home_telephone_number
    - last_name
    - location
    - private_email_address
    - private_phone_number
    - work_phone_number
    type: object
  api.CreateEmployeeProfileResponse:
    properties:
      authentication_phone_number:
        type: string
      created:
        type: string
      date_of_birth:
        type: string
      department:
        type: string
      email_address:
        type: string
      employee_number:
        type: string
      employment_number:
        type: string
      first_name:
        type: string
      gender:
        type: string
      has_borrowed:
        type: boolean
      home_telephone_number:
        type: string
      id:
        type: integer
      is_archived:
        type: boolean
      is_subcontractor:
        type: boolean
      last_name:
        type: string
      location_id:
        type: integer
      out_of_service:
        type: boolean
      position:
        type: string
      private_email_address:
        type: string
      private_phone_number:
        type: string
      user_id:
        type: integer
      work_phone_number:
        type: string
    type: object
  api.GetEmployeeProfileResponse:
    properties:
      employee_id:
        type: integer
      first_name:
        type: string
      last_name:
        type: string
      role_id:
        type: integer
      user_id:
        type: integer
    type: object
  api.GetPermissionsByRoleIDApiResponse:
    properties:
      id:
        type: integer
      name:
        type: string
      resource:
        type: string
    type: object
  api.ListLocationsResponse:
    properties:
      address:
        type: string
      capacity:
        type: integer
      id:
        type: integer
      name:
        type: string
    type: object
  api.LoginUserRequest:
    properties:
      email:
        example: testemail@gmail.com
        type: string
      password:
        example: t2aha000
        type: string
    required:
    - email
    - password
    type: object
  api.LoginUserResponse:
    properties:
      access:
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
        type: string
      refresh:
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
        type: string
    type: object
  api.RefreshTokenRequest:
    properties:
      token:
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
        type: string
    required:
    - token
    type: object
  api.RefreshTokenResponse:
    properties:
      access:
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
        type: string
    type: object
  api.Response-any:
    properties:
      data: {}
      message:
        type: string
      success:
        type: boolean
    type: object
  api.Response-api_GetEmployeeProfileResponse:
    properties:
      data:
        $ref: '#/definitions/api.GetEmployeeProfileResponse'
      message:
        type: string
      success:
        type: boolean
    type: object
  api.Response-api_LoginUserResponse:
    properties:
      data:
        $ref: '#/definitions/api.LoginUserResponse'
      message:
        type: string
      success:
        type: boolean
    type: object
  api.Response-api_RefreshTokenResponse:
    properties:
      data:
        $ref: '#/definitions/api.RefreshTokenResponse'
      message:
        type: string
      success:
        type: boolean
    type: object
  api.Response-array_api_GetPermissionsByRoleIDApiResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/api.GetPermissionsByRoleIDApiResponse'
        type: array
      message:
        type: string
      success:
        type: boolean
    type: object
  db.EmployeeProfile:
    properties:
      authentication_phone_number:
        type: string
      created:
        $ref: '#/definitions/pgtype.Timestamptz'
      date_of_birth:
        $ref: '#/definitions/pgtype.Date'
      department:
        type: string
      email:
        type: string
      employee_number:
        type: string
      employment_number:
        type: string
      first_name:
        type: string
      gender:
        type: string
      has_borrowed:
        type: boolean
      home_telephone_number:
        type: string
      id:
        type: integer
      is_archived:
        type: boolean
      is_subcontractor:
        type: boolean
      last_name:
        type: string
      location_id:
        type: integer
      out_of_service:
        type: boolean
      position:
        type: string
      private_email_address:
        type: string
      private_phone_number:
        type: string
      user_id:
        type: integer
      work_phone_number:
        type: string
    type: object
  pagination.Response-db_EmployeeProfile:
    properties:
      count:
        type: integer
      next:
        type: string
      page_size:
        type: integer
      previous:
        type: string
      results:
        items:
          $ref: '#/definitions/db.EmployeeProfile'
        type: array
    type: object
  pgtype.Date:
    properties:
      infinityModifier:
        $ref: '#/definitions/pgtype.InfinityModifier'
      time:
        type: string
      valid:
        type: boolean
    type: object
  pgtype.InfinityModifier:
    enum:
    - 1
    - 0
    - -1
    type: integer
    x-enum-varnames:
    - Infinity
    - Finite
    - NegativeInfinity
  pgtype.Timestamptz:
    properties:
      infinityModifier:
        $ref: '#/definitions/pgtype.InfinityModifier'
      time:
        type: string
      valid:
        type: boolean
    type: object
info:
  contact:
    email: your-email@domain.com
    name: API Support
  description: This is the Maicare server API documentation.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Maicare API
  version: "1.0"
paths:
  /auth/refresh:
    post:
      consumes:
      - application/json
      description: Refresh access token using refresh token
      parameters:
      - description: Refresh token
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/api.RefreshTokenRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Response-api_RefreshTokenResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Response-any'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/api.Response-any'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.Response-any'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/api.Response-any'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Response-any'
      security:
      - '-': []
      summary: Refresh access token
      tags:
      - authentication
  /auth/token:
    post:
      consumes:
      - application/json
      description: Authenticate user and return access and refresh tokens
      parameters:
      - description: Login credentials
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/api.LoginUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully authenticated
          schema:
            $ref: '#/definitions/api.Response-api_LoginUserResponse'
        "400":
          description: Bad request - Invalid input
          schema:
            $ref: '#/definitions/api.Response-any'
        "401":
          description: Unauthorized - Invalid credentials
          schema:
            $ref: '#/definitions/api.Response-any'
        "404":
          description: Not found - User not found
          schema:
            $ref: '#/definitions/api.Response-any'
        "409":
          description: Conflict - Account status issue
          schema:
            $ref: '#/definitions/api.Response-any'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/api.Response-any'
      security:
      - '-': []
      summary: Generate authentication tokens
      tags:
      - authentication
  /employees/employees_create:
    post:
      consumes:
      - application/json
      description: Create a new employee profile with associated user account
      parameters:
      - description: Employee profile details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/api.CreateEmployeeProfileRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/api.CreateEmployeeProfileResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Response-any'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/api.Response-any'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.Response-any'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/api.Response-any'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Response-any'
      security:
      - BearerAuth: []
      summary: Create employee profile
      tags:
      - employees
  /employees/employees_list:
    get:
      consumes:
      - application/json
      description: Get a paginated list of employee profiles with optional filters
      parameters:
      - description: Page number
        in: query
        name: page
        type: integer
      - description: Page size
        in: query
        name: page_size
        type: integer
      - description: Include archived employees
        in: query
        name: is_archived
        type: boolean
      - description: Include out of service employees
        in: query
        name: out_of_service
        type: boolean
      - description: Filter by department
        in: query
        name: department
        type: string
      - description: Filter by position
        in: query
        name: position
        type: string
      - description: Filter by location ID
        in: query
        name: location_id
        type: integer
      - description: Search term for employee name or number
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/pagination.Response-db_EmployeeProfile'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Response-any'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/api.Response-any'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.Response-any'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/api.Response-any'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Response-any'
      security:
      - BearerAuth: []
      summary: List employee profiles
      tags:
      - employees
  /employees/profile:
    get:
      description: Get employee profile by user ID
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Response-api_GetEmployeeProfileResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Response-any'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/api.Response-any'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.Response-any'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/api.Response-any'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Response-any'
      summary: Get employee profile by user ID
      tags:
      - employees
  /location:
    get:
      consumes:
      - application/json
      description: Get a list of all locations
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/api.ListLocationsResponse'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Response-any'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/api.Response-any'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.Response-any'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/api.Response-any'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Response-any'
      security:
      - BearerAuth: []
      summary: List all locations
      tags:
      - locations
  /roles/{role_id}/permissions:
    get:
      description: Get all permissions associated with a role ID
      parameters:
      - description: Role ID
        in: path
        name: role_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Response-array_api_GetPermissionsByRoleIDApiResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Response-any'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.Response-any'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Response-any'
      summary: Get permissions by role ID
      tags:
      - roles
security:
- Bearer: []
securityDefinitions:
  Bearer:
    description: Add 'Bearer ' prefix before your JWT token for authentication
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
