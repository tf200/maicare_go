// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "email": "your-email@domain.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/auth/refresh": {
            "post": {
                "description": "Refresh access token using refresh token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "authentication"
                ],
                "summary": "Refresh access token",
                "parameters": [
                    {
                        "description": "Refresh token",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.RefreshTokenRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.Response-api_RefreshTokenResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.Response-any"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/api.Response-any"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.Response-any"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/api.Response-any"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.Response-any"
                        }
                    }
                }
            }
        },
        "/auth/token": {
            "post": {
                "description": "Authenticate user and return access and refresh tokens",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "authentication"
                ],
                "summary": "Generate authentication tokens",
                "parameters": [
                    {
                        "description": "Login credentials",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.LoginUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.Response-api_LoginUserResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.Response-any"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/api.Response-any"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.Response-any"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/api.Response-any"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.Response-any"
                        }
                    }
                }
            }
        },
        "/employee/employees_create": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new employee profile with associated user account",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "employees"
                ],
                "summary": "Create employee profile",
                "parameters": [
                    {
                        "description": "Employee profile details",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.CreateEmployeeProfileRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/api.CreateEmployeeProfileResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.Response-any"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/api.Response-any"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.Response-any"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/api.Response-any"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.Response-any"
                        }
                    }
                }
            }
        },
        "/employee/employees_list": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get a paginated list of employee profiles with optional filters",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "employees"
                ],
                "summary": "List employee profiles",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page size",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Include archived employees",
                        "name": "is_archived",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Include out of service employees",
                        "name": "out_of_service",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by department",
                        "name": "department",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by position",
                        "name": "position",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Filter by location ID",
                        "name": "location_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Search term for employee name or number",
                        "name": "search",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/pagination.Response-db_EmployeeProfile"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.Response-any"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/api.Response-any"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.Response-any"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/api.Response-any"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.Response-any"
                        }
                    }
                }
            }
        },
        "/employee/profile": {
            "get": {
                "description": "Get employee profile by user ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "employees"
                ],
                "summary": "Get employee profile by user ID",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.Response-api_GetEmployeeProfileResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.Response-any"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/api.Response-any"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.Response-any"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/api.Response-any"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.Response-any"
                        }
                    }
                }
            }
        },
        "/location": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get a list of all locations",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "locations"
                ],
                "summary": "List all locations",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.ListLocationsResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.Response-any"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/api.Response-any"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.Response-any"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/api.Response-any"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.Response-any"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "api.CreateEmployeeProfileRequest": {
            "type": "object",
            "required": [
                "authentication_phone_number",
                "date_of_birth",
                "email_address",
                "employment_number",
                "first_name",
                "gender",
                "home_telephone_number",
                "last_name",
                "location",
                "private_email_address",
                "private_phone_number",
                "work_phone_number"
            ],
            "properties": {
                "authentication_phone_number": {
                    "type": "string"
                },
                "date_of_birth": {
                    "type": "string"
                },
                "email_address": {
                    "type": "string"
                },
                "employee_number": {
                    "type": "string"
                },
                "employment_number": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "gender": {
                    "type": "string"
                },
                "home_telephone_number": {
                    "type": "string"
                },
                "is_subcontractor": {
                    "type": "boolean"
                },
                "last_name": {
                    "type": "string"
                },
                "location": {
                    "type": "integer"
                },
                "out_of_service": {
                    "type": "boolean"
                },
                "private_email_address": {
                    "type": "string"
                },
                "private_phone_number": {
                    "type": "string"
                },
                "work_phone_number": {
                    "type": "string"
                }
            }
        },
        "api.CreateEmployeeProfileResponse": {
            "type": "object",
            "properties": {
                "authentication_phone_number": {
                    "type": "string"
                },
                "created": {
                    "type": "string"
                },
                "date_of_birth": {
                    "type": "string"
                },
                "department": {
                    "type": "string"
                },
                "email_address": {
                    "type": "string"
                },
                "employee_number": {
                    "type": "string"
                },
                "employment_number": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "gender": {
                    "type": "string"
                },
                "has_borrowed": {
                    "type": "boolean"
                },
                "home_telephone_number": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "is_archived": {
                    "type": "boolean"
                },
                "is_subcontractor": {
                    "type": "boolean"
                },
                "last_name": {
                    "type": "string"
                },
                "location_id": {
                    "type": "integer"
                },
                "out_of_service": {
                    "type": "boolean"
                },
                "position": {
                    "type": "string"
                },
                "private_email_address": {
                    "type": "string"
                },
                "private_phone_number": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                },
                "work_phone_number": {
                    "type": "string"
                }
            }
        },
        "api.GetEmployeeProfileResponse": {
            "type": "object",
            "properties": {
                "employee_id": {
                    "type": "integer"
                },
                "first_name": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "role_id": {
                    "type": "integer"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "api.ListLocationsResponse": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "capacity": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "api.LoginUserRequest": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "example": "user@example.com"
                },
                "password": {
                    "type": "string",
                    "example": "password123"
                }
            }
        },
        "api.LoginUserResponse": {
            "type": "object",
            "properties": {
                "access": {
                    "type": "string",
                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                },
                "refresh": {
                    "type": "string",
                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                }
            }
        },
        "api.RefreshTokenRequest": {
            "type": "object",
            "required": [
                "token"
            ],
            "properties": {
                "token": {
                    "type": "string",
                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                }
            }
        },
        "api.RefreshTokenResponse": {
            "type": "object",
            "properties": {
                "access": {
                    "type": "string",
                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                }
            }
        },
        "api.Response-any": {
            "type": "object",
            "properties": {
                "data": {},
                "message": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "api.Response-api_GetEmployeeProfileResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/api.GetEmployeeProfileResponse"
                },
                "message": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "api.Response-api_LoginUserResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/api.LoginUserResponse"
                },
                "message": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "api.Response-api_RefreshTokenResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/api.RefreshTokenResponse"
                },
                "message": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "db.EmployeeProfile": {
            "type": "object",
            "properties": {
                "authentication_phone_number": {
                    "type": "string"
                },
                "created": {
                    "$ref": "#/definitions/pgtype.Timestamptz"
                },
                "date_of_birth": {
                    "$ref": "#/definitions/pgtype.Date"
                },
                "department": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "employee_number": {
                    "type": "string"
                },
                "employment_number": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "gender": {
                    "type": "string"
                },
                "has_borrowed": {
                    "type": "boolean"
                },
                "home_telephone_number": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "is_archived": {
                    "type": "boolean"
                },
                "is_subcontractor": {
                    "type": "boolean"
                },
                "last_name": {
                    "type": "string"
                },
                "location_id": {
                    "type": "integer"
                },
                "out_of_service": {
                    "type": "boolean"
                },
                "position": {
                    "type": "string"
                },
                "private_email_address": {
                    "type": "string"
                },
                "private_phone_number": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                },
                "work_phone_number": {
                    "type": "string"
                }
            }
        },
        "pagination.Response-db_EmployeeProfile": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "next": {
                    "type": "string"
                },
                "page_size": {
                    "type": "integer"
                },
                "previous": {
                    "type": "string"
                },
                "results": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/db.EmployeeProfile"
                    }
                }
            }
        },
        "pgtype.Date": {
            "type": "object",
            "properties": {
                "infinityModifier": {
                    "$ref": "#/definitions/pgtype.InfinityModifier"
                },
                "time": {
                    "type": "string"
                },
                "valid": {
                    "type": "boolean"
                }
            }
        },
        "pgtype.InfinityModifier": {
            "type": "integer",
            "enum": [
                1,
                0,
                -1
            ],
            "x-enum-varnames": [
                "Infinity",
                "Finite",
                "NegativeInfinity"
            ]
        },
        "pgtype.Timestamptz": {
            "type": "object",
            "properties": {
                "infinityModifier": {
                    "$ref": "#/definitions/pgtype.InfinityModifier"
                },
                "time": {
                    "type": "string"
                },
                "valid": {
                    "type": "boolean"
                }
            }
        }
    },
    "securityDefinitions": {
        "Bearer": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "Maicare API",
	Description:      "This is the Maicare server API documentation.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
